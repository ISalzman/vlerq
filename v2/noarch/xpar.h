/* Generated by re2c 0.10.1.dev on Tue Feb 21 20:56:12 2006 */
#line 1 "../src/xpar.re2c"
/* xpar.re2c -=- Token parser extension, to be processed via re2c */

#define YYCTYPE	      UC
#define YYCURSOR      (*((UM*)&s[0].i))
#define YYLIMIT	      (*((UM*)&s[1].i))
#define YYMARKER      (*((UM*)&s[2].i))
#define YYFILL(n)     fill(s)
#define YYDEBUG(x,y)  printf("state %d char %d (%c)\n",x,y,y)

#define TOKEN	      (*((UM*)&s[3].i))
#define TAIL	      s[4]

L UM fill(P s) {
  P w = Work(s);
  if (isInt(TAIL)) {
    I n = YYLIMIT-TOKEN;
    P p = newBuffer(w,0,n+1);
    UM b = (UM)String(p);
    TAIL.p = p; /* for gc, also prevents re-entering this code */
    memcpy(b,TOKEN,n);
    b[n] = 0;
    /* printf("FILL n %d c %d <%s>\n",n,YYCURSOR-TOKEN,b); */
    YYCURSOR = b+(YYCURSOR-TOKEN);
    YYMARKER = b+(YYMARKER-TOKEN);
    YYLIMIT = b+n;
    TOKEN = b;
  }
  return YYCURSOR;
}

#line 40 "../src/xpar.re2c"


L I sqltoken(P w, P s) {
  if (YYLIMIT == 0) {
    YYCURSOR = (UM)strAt(s[0]);
    YYLIMIT = YYCURSOR+lenAt(s[0]);
  }
 std:
  TOKEN = YYCURSOR;

#line 45 "../noarch/xpar.h"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;

	if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = *YYCURSOR;
	if(yych <= '-') {
		if(yych <= ' ') {
			if(yych <= 0x0A) {
				if(yych <= 0x00) goto yy16;
				if(yych <= 0x08) goto yy15;
				goto yy13;
			} else {
				if(yych == 0x0D) goto yy13;
				if(yych <= 0x1F) goto yy15;
				goto yy13;
			}
		} else {
			if(yych <= '#') {
				if(yych == '"') goto yy12;
				goto yy15;
			} else {
				if(yych <= '$') goto yy9;
				if(yych == '\'') goto yy6;
				goto yy15;
			}
		}
	} else {
		if(yych <= '>') {
			if(yych <= '9') {
				if(yych <= '.') goto yy8;
				if(yych <= '/') goto yy15;
				goto yy4;
			} else {
				if(yych == '<') goto yy10;
				if(yych <= '=') goto yy15;
				goto yy11;
			}
		} else {
			if(yych <= '^') {
				if(yych <= '@') goto yy15;
				if(yych >= '[') goto yy15;
			} else {
				if(yych == '`') goto yy15;
				if(yych >= '{') goto yy15;
			}
		}
	}
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy64;
yy3:
#line 50 "../src/xpar.re2c"
	{ return 257; }
#line 100 "../noarch/xpar.h"
yy4:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy48;
yy5:
#line 51 "../src/xpar.re2c"
	{ return 258; }
#line 108 "../noarch/xpar.h"
yy6:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych >= 0x01) goto yy43;
yy7:
#line 58 "../src/xpar.re2c"
	{ return *TOKEN; }
#line 116 "../noarch/xpar.h"
yy8:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy7;
	if(yych <= '9') goto yy35;
	goto yy7;
yy9:
	yych = *++YYCURSOR;
	if(yych <= '^') {
		if(yych <= '@') goto yy7;
		if(yych <= 'Z') goto yy27;
		goto yy7;
	} else {
		if(yych == '`') goto yy7;
		if(yych <= 'z') goto yy27;
		goto yy7;
	}
yy10:
	yych = *++YYCURSOR;
	if(yych <= '<') goto yy7;
	if(yych <= '>') goto yy25;
	goto yy7;
yy11:
	yych = *++YYCURSOR;
	if(yych == '=') goto yy25;
	goto yy7;
yy12:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 0x00) goto yy7;
	goto yy21;
yy13:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy19;
yy14:
#line 57 "../src/xpar.re2c"
	{ goto std; }
#line 154 "../noarch/xpar.h"
yy15:
	yych = *++YYCURSOR;
	goto yy7;
yy16:
	++YYCURSOR;
#line 59 "../src/xpar.re2c"
	{ return 0; }
#line 162 "../noarch/xpar.h"
yy18:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy19:
	if(yych <= 0x0C) {
		if(yych <= 0x08) goto yy14;
		if(yych <= 0x0A) goto yy18;
		goto yy14;
	} else {
		if(yych <= 0x0D) goto yy18;
		if(yych == ' ') goto yy18;
		goto yy14;
	}
yy20:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy21:
	if(yych <= 0x00) goto yy22;
	if(yych == '"') goto yy23;
	goto yy20;
yy22:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy5;
	case 5:	goto yy45;
	case 4:	goto yy37;
	case 3:	goto yy29;
	case 2:	goto yy24;
	case 1:	goto yy7;
	}
yy23:
	yyaccept = 2;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == '"') goto yy20;
yy24:
#line 56 "../src/xpar.re2c"
	{ return 263; }
#line 204 "../noarch/xpar.h"
yy25:
	++YYCURSOR;
#line 55 "../src/xpar.re2c"
	{ return 262; }
#line 209 "../noarch/xpar.h"
yy27:
	yyaccept = 3;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') {
			if(yych == '(') goto yy30;
		} else {
			if(yych <= '9') goto yy27;
			if(yych <= ':') goto yy32;
		}
	} else {
		if(yych <= '_') {
			if(yych <= 'Z') goto yy27;
			if(yych >= '_') goto yy27;
		} else {
			if(yych <= '`') goto yy29;
			if(yych <= 'z') goto yy27;
		}
	}
yy29:
#line 54 "../src/xpar.re2c"
	{ return 261; }
#line 234 "../noarch/xpar.h"
yy30:
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= ')') {
			if(yych <= '(') goto yy22;
			goto yy34;
		} else {
			if(yych <= '/') goto yy22;
			if(yych <= '9') goto yy30;
			goto yy22;
		}
	} else {
		if(yych <= '_') {
			if(yych <= 'Z') goto yy30;
			if(yych <= '^') goto yy22;
			goto yy30;
		} else {
			if(yych <= '`') goto yy22;
			if(yych <= 'z') goto yy30;
			goto yy22;
		}
	}
yy32:
	yych = *++YYCURSOR;
	if(yych <= '^') {
		if(yych <= '@') goto yy22;
		if(yych >= '[') goto yy22;
	} else {
		if(yych == '`') goto yy22;
		if(yych >= '{') goto yy22;
	}
	yych = *++YYCURSOR;
	goto yy29;
yy34:
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == ':') goto yy32;
	goto yy29;
yy35:
	yyaccept = 4;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= 'D') {
		if(yych <= '/') goto yy37;
		if(yych <= '9') goto yy35;
	} else {
		if(yych <= 'E') goto yy38;
		if(yych == 'e') goto yy38;
	}
yy37:
#line 53 "../src/xpar.re2c"
	{ return 260; }
#line 290 "../noarch/xpar.h"
yy38:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy22;
	} else {
		if(yych <= '-') goto yy39;
		if(yych <= '/') goto yy22;
		if(yych <= '9') goto yy40;
		goto yy22;
	}
yy39:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy22;
	if(yych >= ':') goto yy22;
yy40:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy37;
	if(yych <= '9') goto yy40;
	goto yy37;
yy42:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy43:
	if(yych <= 0x00) goto yy22;
	if(yych != '\'') goto yy42;
	yyaccept = 5;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == '\'') goto yy42;
yy45:
#line 52 "../src/xpar.re2c"
	{ return 259; }
#line 327 "../noarch/xpar.h"
yy46:
	yyaccept = 4;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy55;
	if(yych == 'e') goto yy55;
	goto yy54;
yy47:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 4) YYFILL(4);
	yych = *YYCURSOR;
yy48:
	if(yych <= '9') {
		if(yych == '.') goto yy46;
		if(yych <= '/') goto yy5;
		goto yy47;
	} else {
		if(yych <= 'E') {
			if(yych <= 'D') goto yy5;
		} else {
			if(yych != 'e') goto yy5;
		}
	}
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy22;
	} else {
		if(yych <= '-') goto yy50;
		if(yych <= '/') goto yy22;
		if(yych <= '9') goto yy51;
		goto yy22;
	}
yy50:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy22;
	if(yych >= ':') goto yy22;
yy51:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy37;
	if(yych <= '9') goto yy51;
	goto yy37;
yy53:
	yyaccept = 4;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
yy54:
	if(yych <= 'D') {
		if(yych <= '/') goto yy37;
		if(yych <= '9') goto yy53;
		goto yy37;
	} else {
		if(yych <= 'E') goto yy59;
		if(yych == 'e') goto yy59;
		goto yy37;
	}
yy55:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy22;
	} else {
		if(yych <= '-') goto yy56;
		if(yych <= '/') goto yy22;
		if(yych <= '9') goto yy57;
		goto yy22;
	}
yy56:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy22;
	if(yych >= ':') goto yy22;
yy57:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy37;
	if(yych <= '9') goto yy57;
	goto yy37;
yy59:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy22;
	} else {
		if(yych <= '-') goto yy60;
		if(yych <= '/') goto yy22;
		if(yych <= '9') goto yy61;
		goto yy22;
	}
yy60:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy22;
	if(yych >= ':') goto yy22;
yy61:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy37;
	if(yych <= '9') goto yy61;
	goto yy37;
yy63:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy64:
	if(yych <= 'Z') {
		if(yych <= '/') goto yy3;
		if(yych <= '9') goto yy63;
		if(yych <= '@') goto yy3;
		goto yy63;
	} else {
		if(yych <= '_') {
			if(yych <= '^') goto yy3;
			goto yy63;
		} else {
			if(yych <= '`') goto yy3;
			if(yych <= 'z') goto yy63;
			goto yy3;
		}
	}
}
#line 60 "../src/xpar.re2c"

}

L I tcltoken(P w, P s) {
  if (YYLIMIT == 0) {
    YYCURSOR = (UM)strAt(s[0]);
    YYLIMIT = YYCURSOR+lenAt(s[0]);
  }
 std:
  TOKEN = YYCURSOR;

#line 461 "../noarch/xpar.h"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = *YYCURSOR;
	if(yych <= '.') {
		if(yych <= ' ') {
			if(yych <= 0x0A) {
				if(yych <= 0x00) goto yy85;
				if(yych <= 0x08) goto yy84;
				goto yy82;
			} else {
				if(yych == 0x0D) goto yy82;
				if(yych <= 0x1F) goto yy84;
				goto yy82;
			}
		} else {
			if(yych <= '$') {
				if(yych <= '!') goto yy77;
				if(yych <= '"') goto yy72;
				if(yych <= '#') goto yy84;
				goto yy75;
			} else {
				if(yych == '&') goto yy80;
				if(yych <= '-') goto yy84;
				goto yy74;
			}
		}
	} else {
		if(yych <= '@') {
			if(yych <= ';') {
				if(yych <= '/') goto yy84;
				if(yych <= '0') goto yy69;
				if(yych <= '9') goto yy71;
				goto yy84;
			} else {
				if(yych <= '<') goto yy76;
				if(yych <= '=') goto yy79;
				if(yych <= '>') goto yy78;
				goto yy84;
			}
		} else {
			if(yych <= '`') {
				if(yych <= 'Z') goto yy67;
				if(yych != '_') goto yy84;
			} else {
				if(yych <= 'z') goto yy67;
				if(yych == '|') goto yy81;
				goto yy84;
			}
		}
	}
yy67:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy139;
yy68:
#line 71 "../src/xpar.re2c"
	{ return 257; }
#line 521 "../noarch/xpar.h"
yy69:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'x') goto yy135;
	goto yy120;
yy70:
#line 72 "../src/xpar.re2c"
	{ return 258; }
#line 530 "../noarch/xpar.h"
yy71:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy120;
yy72:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych >= 0x01) goto yy108;
yy73:
#line 78 "../src/xpar.re2c"
	{ return *TOKEN; }
#line 542 "../noarch/xpar.h"
yy74:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy73;
	if(yych <= '9') goto yy100;
	goto yy73;
yy75:
	yych = *++YYCURSOR;
	if(yych <= '^') {
		if(yych <= '@') goto yy73;
		if(yych <= 'Z') goto yy91;
		goto yy73;
	} else {
		if(yych == '`') goto yy73;
		if(yych <= 'z') goto yy91;
		goto yy73;
	}
yy76:
	yych = *++YYCURSOR;
	if(yych == '=') goto yy89;
	goto yy73;
yy77:
	yych = *++YYCURSOR;
	if(yych == '=') goto yy89;
	goto yy73;
yy78:
	yych = *++YYCURSOR;
	if(yych == '=') goto yy89;
	goto yy73;
yy79:
	yych = *++YYCURSOR;
	if(yych == '=') goto yy89;
	goto yy73;
yy80:
	yych = *++YYCURSOR;
	if(yych == '&') goto yy89;
	goto yy73;
yy81:
	yych = *++YYCURSOR;
	if(yych == '|') goto yy89;
	goto yy73;
yy82:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy88;
yy83:
#line 77 "../src/xpar.re2c"
	{ goto std; }
#line 590 "../noarch/xpar.h"
yy84:
	yych = *++YYCURSOR;
	goto yy73;
yy85:
	++YYCURSOR;
#line 79 "../src/xpar.re2c"
	{ return 0; }
#line 598 "../noarch/xpar.h"
yy87:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy88:
	if(yych <= 0x0C) {
		if(yych <= 0x08) goto yy83;
		if(yych <= 0x0A) goto yy87;
		goto yy83;
	} else {
		if(yych <= 0x0D) goto yy87;
		if(yych == ' ') goto yy87;
		goto yy83;
	}
yy89:
	++YYCURSOR;
#line 76 "../src/xpar.re2c"
	{ return 262; }
#line 617 "../noarch/xpar.h"
yy91:
	yyaccept = 2;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') {
			if(yych == '(') goto yy94;
		} else {
			if(yych <= '9') goto yy91;
			if(yych <= ':') goto yy97;
		}
	} else {
		if(yych <= '_') {
			if(yych <= 'Z') goto yy91;
			if(yych >= '_') goto yy91;
		} else {
			if(yych <= '`') goto yy93;
			if(yych <= 'z') goto yy91;
		}
	}
yy93:
#line 75 "../src/xpar.re2c"
	{ return 261; }
#line 642 "../noarch/xpar.h"
yy94:
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= ')') {
			if(yych >= ')') goto yy99;
		} else {
			if(yych <= '/') goto yy96;
			if(yych <= '9') goto yy94;
		}
	} else {
		if(yych <= '_') {
			if(yych <= 'Z') goto yy94;
			if(yych >= '_') goto yy94;
		} else {
			if(yych <= '`') goto yy96;
			if(yych <= 'z') goto yy94;
		}
	}
yy96:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy70;
	case 3:	goto yy102;
	case 2:	goto yy93;
	case 1:	goto yy73;
	}
yy97:
	yych = *++YYCURSOR;
	if(yych <= '^') {
		if(yych <= '@') goto yy96;
		if(yych >= '[') goto yy96;
	} else {
		if(yych == '`') goto yy96;
		if(yych >= '{') goto yy96;
	}
	yych = *++YYCURSOR;
	goto yy93;
yy99:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == ':') goto yy97;
	goto yy93;
yy100:
	yyaccept = 3;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= 'D') {
		if(yych <= '/') goto yy102;
		if(yych <= '9') goto yy100;
	} else {
		if(yych <= 'E') goto yy103;
		if(yych == 'e') goto yy103;
	}
yy102:
#line 74 "../src/xpar.re2c"
	{ return 260; }
#line 702 "../noarch/xpar.h"
yy103:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy96;
	} else {
		if(yych <= '-') goto yy104;
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy105;
		goto yy96;
	}
yy104:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy96;
	if(yych >= ':') goto yy96;
yy105:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy102;
	if(yych <= '9') goto yy105;
	goto yy102;
yy107:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy108:
	if(yych <= '"') {
		if(yych <= 0x00) goto yy96;
		if(yych <= '!') goto yy107;
		goto yy110;
	} else {
		if(yych != '\\') goto yy107;
	}
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 'm') {
		if(yych <= '\'') {
			if(yych == '"') goto yy107;
			if(yych <= '&') goto yy96;
			goto yy107;
		} else {
			if(yych <= '\\') {
				if(yych <= '[') goto yy96;
				goto yy107;
			} else {
				if(yych == 'b') goto yy107;
				goto yy96;
			}
		}
	} else {
		if(yych <= 's') {
			if(yych <= 'n') goto yy107;
			if(yych == 'r') goto yy107;
			goto yy96;
		} else {
			if(yych <= 'u') {
				if(yych <= 't') goto yy107;
				goto yy113;
			} else {
				if(yych == 'x') goto yy112;
				goto yy96;
			}
		}
	}
yy110:
	++YYCURSOR;
#line 73 "../src/xpar.re2c"
	{ return 259; }
#line 772 "../noarch/xpar.h"
yy112:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy117;
		goto yy96;
	} else {
		if(yych <= 'F') goto yy117;
		if(yych <= '`') goto yy96;
		if(yych <= 'f') goto yy117;
		goto yy96;
	}
yy113:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych >= ':') goto yy96;
	} else {
		if(yych <= 'F') goto yy114;
		if(yych <= '`') goto yy96;
		if(yych >= 'g') goto yy96;
	}
yy114:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych >= ':') goto yy96;
	} else {
		if(yych <= 'F') goto yy115;
		if(yych <= '`') goto yy96;
		if(yych >= 'g') goto yy96;
	}
yy115:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych >= ':') goto yy96;
	} else {
		if(yych <= 'F') goto yy116;
		if(yych <= '`') goto yy96;
		if(yych >= 'g') goto yy96;
	}
yy116:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy107;
		goto yy96;
	} else {
		if(yych <= 'F') goto yy107;
		if(yych <= '`') goto yy96;
		if(yych <= 'f') goto yy107;
		goto yy96;
	}
yy117:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy107;
		goto yy96;
	} else {
		if(yych <= 'F') goto yy107;
		if(yych <= '`') goto yy96;
		if(yych <= 'f') goto yy107;
		goto yy96;
	}
yy118:
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy127;
	if(yych == 'e') goto yy127;
	goto yy126;
yy119:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 4) YYFILL(4);
	yych = *YYCURSOR;
yy120:
	if(yych <= '9') {
		if(yych == '.') goto yy118;
		if(yych <= '/') goto yy70;
		goto yy119;
	} else {
		if(yych <= 'E') {
			if(yych <= 'D') goto yy70;
		} else {
			if(yych != 'e') goto yy70;
		}
	}
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy96;
	} else {
		if(yych <= '-') goto yy122;
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy123;
		goto yy96;
	}
yy122:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy96;
	if(yych >= ':') goto yy96;
yy123:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy102;
	if(yych <= '9') goto yy123;
	goto yy102;
yy125:
	yyaccept = 3;
	YYMARKER = ++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
yy126:
	if(yych <= 'D') {
		if(yych <= '/') goto yy102;
		if(yych <= '9') goto yy125;
		goto yy102;
	} else {
		if(yych <= 'E') goto yy131;
		if(yych == 'e') goto yy131;
		goto yy102;
	}
yy127:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy96;
	} else {
		if(yych <= '-') goto yy128;
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy129;
		goto yy96;
	}
yy128:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy96;
	if(yych >= ':') goto yy96;
yy129:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy102;
	if(yych <= '9') goto yy129;
	goto yy102;
yy131:
	yych = *++YYCURSOR;
	if(yych <= ',') {
		if(yych != '+') goto yy96;
	} else {
		if(yych <= '-') goto yy132;
		if(yych <= '/') goto yy96;
		if(yych <= '9') goto yy133;
		goto yy96;
	}
yy132:
	yych = *++YYCURSOR;
	if(yych <= '/') goto yy96;
	if(yych >= ':') goto yy96;
yy133:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '/') goto yy102;
	if(yych <= '9') goto yy133;
	goto yy102;
yy135:
	yych = *++YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy96;
		if(yych >= ':') goto yy96;
	} else {
		if(yych <= 'F') goto yy136;
		if(yych <= '`') goto yy96;
		if(yych >= 'g') goto yy96;
	}
yy136:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '/') goto yy70;
		if(yych <= '9') goto yy136;
		goto yy70;
	} else {
		if(yych <= 'F') goto yy136;
		if(yych <= '`') goto yy70;
		if(yych <= 'f') goto yy136;
		goto yy70;
	}
yy138:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy139:
	if(yych <= 'Z') {
		if(yych <= '/') goto yy68;
		if(yych <= '9') goto yy138;
		if(yych <= '@') goto yy68;
		goto yy138;
	} else {
		if(yych <= '_') {
			if(yych <= '^') goto yy68;
			goto yy138;
		} else {
			if(yych <= '`') goto yy68;
			if(yych <= 'z') goto yy138;
			goto yy68;
		}
	}
}
#line 80 "../src/xpar.re2c"

}

L I xml1token(P w, P s) {
  if (YYLIMIT == 0) {
    YYCURSOR = (UM)strAt(s[0]);
    YYLIMIT = YYCURSOR+lenAt(s[0]);
  }
  TOKEN = YYCURSOR;

#line 1007 "../noarch/xpar.h"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if((YYLIMIT - YYCURSOR) < 9) YYFILL(9);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy147;
	if(yych != '<') goto yy144;
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == '!') goto yy149;
yy143:
#line 97 "../src/xpar.re2c"
	{ return 1; }
#line 1021 "../noarch/xpar.h"
yy144:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy146;
	if(yych != '<') goto yy144;
yy146:
#line 96 "../src/xpar.re2c"
	{ return 258; }
#line 1031 "../noarch/xpar.h"
yy147:
	++YYCURSOR;
#line 98 "../src/xpar.re2c"
	{ return 0; }
#line 1036 "../noarch/xpar.h"
yy149:
	yych = *++YYCURSOR;
	if(yych == '[') goto yy151;
yy150:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy143;
	}
yy151:
	yych = *++YYCURSOR;
	if(yych != 'C') goto yy150;
	yych = *++YYCURSOR;
	if(yych != 'D') goto yy150;
	yych = *++YYCURSOR;
	if(yych != 'A') goto yy150;
	yych = *++YYCURSOR;
	if(yych != 'T') goto yy150;
	yych = *++YYCURSOR;
	if(yych != 'A') goto yy150;
	yych = *++YYCURSOR;
	if(yych != '[') goto yy150;
	++YYCURSOR;
#line 90 "../src/xpar.re2c"
	{ while (YYCURSOR <= YYLIMIT-3 &&
		    (YYCURSOR[2]!='>' || YYCURSOR[1]!=']' || YYCURSOR[0]!=']'))
		  ++YYCURSOR;
		YYCURSOR += 3;
		return 257;
	      }
#line 1066 "../noarch/xpar.h"
}
#line 99 "../src/xpar.re2c"

}

L I xml2token(P w, P s) {
  if (YYLIMIT == 0) {
    YYCURSOR = (UM)strAt(s[0]);
    YYLIMIT = YYCURSOR+lenAt(s[0]);
  }
 std:
  TOKEN = YYCURSOR;

#line 1080 "../noarch/xpar.h"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	YYCTYPE *yyctxmarker = YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= '.') {
		if(yych <= 0x1F) {
			if(yych <= 0x0A) {
				if(yych <= 0x00) goto yy181;
				if(yych >= 0x09) goto yy176;
			} else {
				if(yych == 0x0D) goto yy176;
			}
		} else {
			if(yych <= '"') {
				if(yych <= ' ') goto yy176;
				if(yych <= '!') goto yy164;
				goto yy169;
			} else {
				if(yych == '\'') goto yy167;
				if(yych >= '-') goto yy171;
			}
		}
	} else {
		if(yych <= '?') {
			if(yych <= '<') {
				if(yych <= '/') goto yy174;
				if(yych <= ':') goto yy171;
			} else {
				if(yych <= '=') goto yy165;
				if(yych <= '>') goto yy179;
				goto yy162;
			}
		} else {
			if(yych <= '^') {
				if(yych <= '@') goto yy161;
				if(yych <= 'Z') goto yy171;
			} else {
				if(yych == '`') goto yy161;
				if(yych <= 'z') goto yy171;
			}
		}
	}
yy161:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 1:	goto yy202;
	case 0:	goto yy191;
	}
yy162:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy161;
	if(yych == '>') goto yy213;
	goto yy162;
yy164:
	yyctxmarker = YYCURSOR + 1;
	yych = *++YYCURSOR;
	if(yych == '-') goto yy187;
	goto yy186;
yy165:
	++YYCURSOR;
#line 113 "../src/xpar.re2c"
	{ return 2; }
#line 1148 "../noarch/xpar.h"
yy167:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy161;
	if(yych == '\'') goto yy183;
	goto yy167;
yy169:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy161;
	if(yych == '"') goto yy183;
	goto yy169;
yy171:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '@') {
		if(yych <= '.') {
			if(yych >= '-') goto yy171;
		} else {
			if(yych <= '/') goto yy173;
			if(yych <= ':') goto yy171;
		}
	} else {
		if(yych <= '_') {
			if(yych <= 'Z') goto yy171;
			if(yych >= '_') goto yy171;
		} else {
			if(yych <= '`') goto yy173;
			if(yych <= 'z') goto yy171;
		}
	}
yy173:
#line 115 "../src/xpar.re2c"
	{ return 263; }
#line 1186 "../noarch/xpar.h"
yy174:
	++YYCURSOR;
#line 116 "../src/xpar.re2c"
	{ return 3; }
#line 1191 "../noarch/xpar.h"
yy176:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x0C) {
		if(yych <= 0x08) goto yy178;
		if(yych <= 0x0A) goto yy176;
	} else {
		if(yych <= 0x0D) goto yy176;
		if(yych == ' ') goto yy176;
	}
yy178:
#line 117 "../src/xpar.re2c"
	{ goto std; }
#line 1206 "../noarch/xpar.h"
yy179:
	++YYCURSOR;
#line 118 "../src/xpar.re2c"
	{ return 4; }
#line 1211 "../noarch/xpar.h"
yy181:
	++YYCURSOR;
#line 119 "../src/xpar.re2c"
	{ --YYCURSOR; return 0; }
#line 1216 "../noarch/xpar.h"
yy183:
	++YYCURSOR;
#line 114 "../src/xpar.re2c"
	{ return 262; }
#line 1221 "../noarch/xpar.h"
yy185:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy186:
	if(yych <= '>') {
		if(yych <= 0x00) goto yy161;
		if(yych <= '=') goto yy185;
		goto yy190;
	} else {
		if(yych == '[') goto yy188;
		goto yy185;
	}
yy187:
	yyctxmarker = YYCURSOR + 1;
	yych = *++YYCURSOR;
	if(yych == '-') goto yy194;
	goto yy186;
yy188:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy189:
	if(yych <= 0x00) goto yy161;
	if(yych == ']') goto yy192;
	goto yy188;
yy190:
	++YYCURSOR;
yy191:
	YYCURSOR = yyctxmarker;
#line 112 "../src/xpar.re2c"
	{ return 261; }
#line 1255 "../noarch/xpar.h"
yy192:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x0D) {
		if(yych <= 0x08) goto yy161;
		if(yych <= 0x0A) goto yy192;
		if(yych <= 0x0C) goto yy161;
		goto yy192;
	} else {
		if(yych <= ' ') {
			if(yych <= 0x1F) goto yy161;
			goto yy192;
		} else {
			if(yych == '>') goto yy190;
			goto yy161;
		}
	}
yy194:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '=') {
		if(yych <= 0x00) goto yy161;
		if(yych == '-') goto yy199;
		goto yy194;
	} else {
		if(yych <= '>') goto yy198;
		if(yych != '[') goto yy194;
	}
yy196:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= '-') {
		if(yych <= 0x00) goto yy161;
		if(yych <= ',') goto yy196;
		goto yy208;
	} else {
		if(yych == ']') goto yy209;
		goto yy196;
	}
yy198:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 0x00) goto yy191;
	goto yy205;
yy199:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '=') {
		if(yych <= 0x00) goto yy161;
		if(yych != '-') goto yy194;
	} else {
		if(yych <= '>') goto yy198;
		if(yych == '[') goto yy196;
		goto yy194;
	}
	yyctxmarker = YYCURSOR + 1;
	yych = *++YYCURSOR;
	if(yych != '>') goto yy186;
	++YYCURSOR;
yy202:
	YYCURSOR = yyctxmarker;
#line 111 "../src/xpar.re2c"
	{ return 260; }
#line 1326 "../noarch/xpar.h"
yy203:
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= 0x00) goto yy161;
	if(yych == '-') goto yy206;
yy204:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy205:
	if(yych <= 0x00) goto yy161;
	if(yych == '-') goto yy203;
	goto yy204;
yy206:
	yyctxmarker = YYCURSOR + 1;
	yych = *++YYCURSOR;
	if(yych != '>') goto yy161;
	yych = *++YYCURSOR;
	goto yy202;
yy208:
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = *YYCURSOR;
	if(yych <= '-') {
		if(yych <= 0x00) goto yy161;
		if(yych <= ',') goto yy196;
		goto yy211;
	} else {
		if(yych != ']') goto yy196;
	}
yy209:
	yyctxmarker = YYCURSOR + 1;
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= 0x1F) {
		if(yych <= 0x0A) {
			if(yych <= 0x00) goto yy161;
			if(yych <= 0x08) goto yy204;
			goto yy209;
		} else {
			if(yych == 0x0D) goto yy209;
			goto yy204;
		}
	} else {
		if(yych <= '-') {
			if(yych <= ' ') goto yy209;
			if(yych <= ',') goto yy204;
			goto yy203;
		} else {
			if(yych == '>') goto yy198;
			goto yy204;
		}
	}
yy211:
	yyctxmarker = YYCURSOR + 1;
	yych = *++YYCURSOR;
	if(yych != '>') goto yy189;
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 0x00) goto yy202;
	goto yy189;
yy213:
	++YYCURSOR;
	YYCURSOR = yyctxmarker;
#line 110 "../src/xpar.re2c"
	{ return 259; }
#line 1395 "../noarch/xpar.h"
}
#line 120 "../src/xpar.re2c"

}

/* rul=5 rdc=6 tab=7 key=8 val=9 nod=10 pval=11 txt=12 sym=13 ops=14 */

L I sfind(P t, P k) {
  I i = 0, n = Length(t);
  while (i < n)
    if (Length(t[i].p) == Length(k) &&
	memcmp(String(t[i].p),String(k),Length(k)) == 0)
      break;
    else
      ++i;
  if (i >= n) i = -1;
  return i;
}

L I pfind(P o, I t, I s) {
  I i = 0, n = Length(o[8].p), k = 256*t+s;
  while (i < n) if (o[8].p[i].i == k) break; else ++i;
  return i < n ? o[9].p[i].i : 0;
}

L V parser(P w) {
  I token = Wpopd.i, mode, next, base, act, typ, i, n;
  P o = Wsubd.p, nv;
  o[11] = Wpopd;
  Wtopd.p = o; /* hold on to ref */
  if (token == 257) {
    I z = sfind(o[13].p,o[11].p);
    if (z >= 0) token = 264 + z;
  } else if (token == 262) {
    I z = sfind(o[14].p,o[11].p);
    if (z < 0) { puts("ops error"); }
    token = 264 + Length(o[13].p) + 1 + z;
  }
  for (;;) {
    I f = pfind(o, token, o[Length(o)-1].i);
    mode = f & 3;
    next = f / 4;
    if (mode != 2) break;
    base = Length(o) - o[6].p[next].i;
    act = o[7].p[next].i;
    typ = act & 15;
    n = (act>>4) & 15;
    nv = newVector(w,n);
    o[18].p = nv; /* hold on to ref */
    if (typ == 0) {
      if (o[12].i)
	nv[Length(nv)++] = o[10].p[(act >> 8) & 255];
      else
	nv[Length(nv)++].i = (act >> 8) & 255;
      for (i = 0; i < 15; ++i)
	if (act & (1 << (i+16))) {
	  nv[Length(nv)].i = -1;
	  nv[Length(nv)++].p = o[base+i-1].p;
	}
    } else {
      for (i = 0; i < n; ++i) {
	I k = (act >> (4*i+8)) & 15;
	if (k == 0)
	  nv[Length(nv)++] = Wn;
	else {
	  nv[Length(nv)].i = -1;
	  nv[Length(nv)++].p = o[base+k-1].p;
	}
      }
      switch (typ) {
	case 2: { I n0 = Length(nv[0].p), n1 = Length(nv[1].p);
		  P v = newVector(w,n0+n1);
		  for (i = 0; i < n0; ++i) v[i] = nv[0].p[i];
		  for (i = 0; i < n1; ++i) v[i+n0] = nv[1].p[i];
		  Length(v) = n0+n1;
		  nv = v;
		}
		break;
	case 3: nv = nv[0].p;
      }
    }
    Length(o) = base + 1;
    o[base].i = pfind(o, o[5].p[next].i, o[base-1].i) / 4;
    o[base].p = nv;
  }
  if (mode) {
    o[Length(o)].i = next;
    o[Length(o)++].p = o[11].p;
    Wtopd = Wz;
  } else {
    Wtopd.p = o[Length(o)-1].p;
    Wtopd.i = -1;
  }
}

L I parExt(P box, I cmd) {
  P w = Work(box), s = Wtopd.p;
  switch (cmd) {
    case 0:   parser(w); return 0;
    case 1:   Wtopd.i = sqltoken(w,Wtopd.p); break;
    case 2:   Wtopd.i = tcltoken(w,Wtopd.p); break;
    case 3:   Wtopd.i = xml1token(w,Wtopd.p); break;
    case 4:   Wtopd.i = xml2token(w,Wtopd.p); break;
    default:  return 0;
  }
  if (Wtopd.i < 256)
    Wtopd.p = Wz.p;
  else {
    /* TODO return a shared string iso a copy */
    Wtopd.p = newBuffer(w,(S)TOKEN,YYCURSOR-TOKEN);
    Length(Wtopd.p) = YYCURSOR-TOKEN;
  }
  return 0;
}

/* vim: set ft=c : */
