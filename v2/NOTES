OFFSETS

  CUSTG (usrGet)
    adr:  get func #o-x

  VIEW
    tag:  meta view
    adr:  owner (not yet)
    dat:  p=vtab (i=flags, not yet)
    len:  i=rows (funview only: p=funtab)

  VTAB #4
    0:  type func #v-s
    1:  count func #v-n
    2:  at func #rc-x
    3:  mut func #v-v

  FUNTAB #6
    0:  tag
    1:  arity
    2:  meta func #-v Wo=v
    3:  init func #- Wo=v
    4:  count func #-n Wo=v
    5:  at func #c-x Wo=v

  LATETAB #4
    0:  tag
    1:  arity
    2:  meta func #-v Wo=v
    3:  init func #- Wo=v

  FUNVIEW #10
    0:  a1
    1:  a2
    2:  a3
    3:  a4 or t3
    4:  t2
    5:  t1
    6:  ?
    7:  ?
    8:  count func #-n Wo=v (copy of funtab #4)
    9:  at func #c-x Wo=r (copy of funtab #5)

  STRCOL #rows
    adr:  str getter
    dat:  int col with sizes
    len:  -1 for S, 0 for B type columns
    <i>:  p=data i=off, of if i==-1: p=str (memo)

  PARSER #100
    0:  YYCURSOR
    1:  YYLIMIT
    2:  YYMARKER
    3:  TOKEN
    4:  TAIL
    5:  rul, states.r data
    6:  rdc, states.c data
    7:  tab, states.t data
    8:  key, trans.k data
    9:  val, trans.v data
    10: nod, nodes.s data
    11: pval
    12: txt, 1=text 0=numeric node types
    13: sym, words.s data
    14: ops, vector of multi-char operators
    15: xpar, parser type in xpar ext
    16: spare
    17: spare
    18: temp, used to hold on to a new node
    19: bottom of parse stack
    20..99: parse stack

  XPARSER #6
    0:  YYCURSOR
    1:  YYLIMIT
    2:  YYMARKER
    3:  TOKEN
    4:  TAIL
    5:  xpar, 3=xml1 4=xml2

FLAGS

  Wq debugging
    1<<0  display each call to runWork
    1<<1  display each opcode execution
    1<<2  expand variable references if 1<<1 is set
    1<<3  display each symbol definition

STRING COLUMN IDEAS
  - one contig are with all strings, just as it would be on file
  - support for null, i.e. compressed bitmap
  - memo's also use compressed bitmap (as "overlay")
  - buffer: contents is concat (either S or B mode)
      adr: getter
      dat: int vec with sizes
      tag: bitmap?
  - also need:
      offsets, i.e. cumulative sizes (in dat.dat?)
        deal with start/end item
        offset vec is expanded to include null entries
      expanded bitmap (in tag.dat?)
