\ main.th -=- main app code

\ s? argv .p " in main.th\n" .p 

\ starkit listing
: v. #rcs-r sp .p ": " .p over swap ^at .p ;
: sk2 #v- fixsz
    { sp 0 'n v. 2 'd v. 1 's v. " c: " .p 3 ^at tlen .p nl } rep* ;
: sk1 #v- fixsz
    { '<DIR> .p 0 'n v. 1 'p v. 2 ^at " #" .p dup ^count .p nl sk2 } rep* ;
: mkr.list #v- b2p 0 ^at sk1 ;

: dispatch #s-
    ( '-h    2 "-h" { Exe 2 ^at 'vqx.txt findez .p }
      '-v    2 "-v" { infv .p sp exef .p sp argv .p nl info stats }
      'eval  3 "eval <code>" { argv 2 b@ eval }
      'lsk   3 "lsk <file>" { argv 2 b@ mkfopen mkr.list }
      'views 3 "views <file>" { argv 2 b@ mkfopen ^describe .p nl }
      'view3 3 "view3 <file>" { argv 2 b@ v3open ^describe .p nl }
      0      0 "first arg must be one of (-h -v eval lsk)" )
    b2p begin 2dup @ cmp over @ str? and while 4 + repeat
    1+ argv tlen over @ - if "usage: " .p 1+ @ .p nl else 2+ @ exec then drop ;

: vqx #- argv tlen 1 > if argv 1 b@ dispatch else
    "Vlerq Utility, argument expected (try -h)\n" .p then ;

vqx bye
