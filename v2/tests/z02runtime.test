#!/usr/bin/tclsh
# z02runtime.test -=- test suite for the thrill runtime code
# %renumber<^test >%

set uses {thrill}
source [file join [file dirname [info script]] initests.tcl]
vsetup 

test 0 {thrive vm has been set up} {
  regexp {^::thrive_\d+$} $::thrill::v::ws
} 1

test 1 {over 250 words have been defined} {
  expr {[::thrill::vcall { Wv b2i }] > 250}
} 1

test 2 {run infv and argv} -body {
  ::thrill::vcall {
    infv .p " #" .p argv tlen b2i .p ": " .p argv .p "\n" .p Wn
  }
} -match glob -output "Tcl 223 {??? ?? 200? ??:??:??} \[48\] #0: \n"

test 3 {test the garbage collector} {
  # create lots of garbage to be collected
  ::thrill::vcall { 2500 { drop 1234 nvec drop } rep* Wn }
} {}

test 4 {call the garbage collector} {
  # explicitly call the collector a number of times
  ::thrill::vcall { 100 { drop fgc } rep* Wn }
} {}

test 5 {return lots of references} -body {
  set r [::thrill::vcall { 10000 { 1 pack dup mao } map* }]
  list [llength $r] [lrange $r 0 2] [lrange $r end-2 end]
} -match glob -result {10000 {^* ^* ^*} {^1000? ^1000? ^1000?}}

test 6 {dynamic loading} {
  ::thrill::vcall { 'dynext xdyn exec 0 } S ./dynext.tde
  list [::thrill::vcall { dynext exec }] \
	[::thrill::vcall { 12 dynext 1 box exec }]
} [list "Hello world!\n" 144]

test 7 {error markers} {
  set r {}
  foreach i {-2 -1 0 1 2} {
    lappend r [catch { ::thrill::vcall { Wn rbox } I $i } e] $e
  }
  set r
} {1 -2 1 -1 0 {} 1 1 1 2}

test 8 {indirect error marker} {
  # Wn,-1 is special, it indirectly returns Wn[Tag] as error instead
  list [catch { ::thrill::vcall { 'booh Wn ttag! Wn b2o } } e] $e
} {1 booh}

test 9 {default nil} {
  ::thrill::vcall Wn
} {}

test 10 {configurable nil} {
  ::thrill::vcall { '<NULL> Wn tdat! Wn }
} <NULL>

test 11 {unused Te type} {
  # use a hack to create a type Te, just because we can...
  ::thrill::vcall { Wn b2p 0 nsha { } custg typ }
} 6

test 12 {unsupported callback} {
  set c [catch { ::thrill::vcall { 'abc lit syst custg } } e]
  ::thrill::vscript { drop } ;# whoops, need to clean up stack (TODO why?)
  list $c $e
} {1 {cannot handle callback}}

test 13 {data stack is empty} {
  vfinish
} {}

cleanupTests

# vim: set ft=tcl :
