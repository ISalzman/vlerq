#!/usr/bin/tclsh
# z01core.test -=- test suite for the core thrive extension
# %renumber<^\s*test >%

set uses {}
source [file join [file dirname [info script]] initests.tcl]

# this is the minimum needed to start up running a Thrive VM from scratch
set miniboot { 0 exit exec -1 syst [[ }

# test package loading and basic commands

test 0 {package thrive} {
  package require thrive
} 2.23

test 1 {pre-defined thrive command} {
  info commands thrive*
} thrive

test 2 {create thrive command object} {
  set T [thrive]
  regexp {^::thrive_\d+$} $T
} 1

test 3 {available sub-commands} {
  list [catch { $T ? } err] $err
} {1 {bad option "?": must be pop, run, eval, find, push, load, or type}}

test 4 {basic stack push & pop} {
  $T push I 123
  $T push I 456
  set r [$T pop]
  list $r [$T pop]
} {456 123}

test 5 {load core words} {
  $T load $miniboot
} {}

# test boot code setup

test 6 {find a primitive by name} {
  $T find +
} ^1

test 7 {run int getter} {
  $T eval 54321
  $T run
  $T pop
} 54321

test 8 {add two ints via eval} {
  $T push II 123 456
  $T eval +
  list [$T run] [$T pop]
} {0 579}

test 9 {add two ints via find} {
  $T push II 12 34
  list [$T run [$T find +]] [$T pop]
} {-1 46}

# test integer operations

foreach {x y z} {
  0 {27} {27}
  1 {27 12 +} {39}
  2 {27 12 -} {15}
  3 {27 12 *} {324}
  4 {27 12 div} {2}
  5 {27 12 mod} {3}
  6 {0 1 2 swap} {0 2 1}
  7 {2 3 dup} {2 3 3}
  8 {3 4 5 over} {3 4 5 4}
  9 {6 7 8 nip} {6 8}
  10 {5 4 3 tuck} {5 3 4 3}
  11 {3 4 <<} {48}
  12 {12 2 >>} {3}
} {
  test 10.$x [list $y] {
    $T load $y
    set r {}
    foreach i $z { set r [linsert $r 0 [$T pop]] }
    return $r
  } $z
}

test 11 {try type fail} {
  $T load { 3 nbuf }
  list [catch { $T type [$T pop] } err] $err
} {1 {not a reference}}

test 12 {try type obj} {
  $T load { 3 nbuf mao }
  $T type [$T pop]
} 5

test 13 {try type wrong workspace} {
  set T2 [::thrive]
  $T2 load $miniboot
  $T2 load { 3 nbuf mao }
  list [catch { $T type [$T2 pop] } err] $err
} {1 {ref error, wrong workspace}}

test 14 {clean up} {
  rename $T ""
  rename $T2 ""
  unset T T2
} {}

cleanupTests

# vim: set ft=tcl :
