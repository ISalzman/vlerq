#!/usr/bin/tclsh
# z21vqx.test -=- test suite for the vq and vqx standalone executables
# %renumber<^test >%

set uses {}
source [file join [file dirname [info script]] initests.tcl]

test 0 {vq trial run} vq {
  exec vq$exeSuff << "1 2 + .p"
} 3

test 1 {over 500 defined words} vq {
  expr {[llength [split [exec vq$exeSuff << words]]] > 500}
} 1

test 2 {argv handling} vq {
  exec vq$exeSuff - a bb "c d" << "argv dup tlen .p sp .p"
} "5 \[vq$exeSuff - a bb c d]"

test 3 {check info vec} -constraints vq -body {
  exec vq$exeSuff << "infv { sp @ .p } rep* sp"
} -match glob -result { Vq 223 ??? ?? 200? ??:??:?? [48] }

test 4 {check basic info output} -constraints vq -body {
  exec vq$exeSuff << info
} -match regexp -result \
  {-\d+ highbit, (32|64) bits/int, (8|16) bytes/box, 30 var0, 103 dsp0}

test 5 {vqx no args} vqx {
  exec vqx$exeSuff
} {Vlerq Utility, argument expected (try -h)}

test 6 {vqx eval} vqx {
  # this call exercises a lot of the basic vqx functionality
  exec vqx$exeSuff eval {1 .p "2 .p" eval 3 .p nl}
} 123

test 7 {vqx views} vqx {
  exec vqx$exeSuff views ../noarch/gtest.db
} {\
 -view
  +-frequents:V
  | +-drinker:S
  | +-bar:S
  | +-perweek:I
  +-likes:V
  | +-drinker:S
  | +-beer:S
  | +-perday:I
  +-serves:V
    +-bar:S
    +-beer:S
    +-quantity:I}

cleanupTests

# vim: set ft=tcl :
