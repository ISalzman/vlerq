#!/usr/bin/tclsh
# z08metakit.test -=- test suite for the metakit data reader
# %renumber<^test >%

set uses {thrill ratcl}
source [file join [file dirname [info script]] initests.tcl]

test 0 {open mk file} -body {
  set D [vopen ../noarch/gtest.db]
} -match glob -result {^*}

test 1 {root size} {
  view $D get #
} 1

test 2 {root names} {
  view $D info names
} {frequents likes serves}

test 3 {root types} {
  view $D info types
} {V V V}

test 4 {view sizes} {
  set F [view $D get 0 frequents]
  set L [view $D get 0 likes]
  set S [view $D get 0 serves]
  list [view $F get #] [view $L get #] [view $S get #]
} {10 8 9}

test 5 {view names} {
  list [view $F info names] [view $L info names] [view $S info names]
} {{drinker bar perweek} {drinker beer perday} {bar beer quantity}}

test 6 {view types} {
  list [view $F info types] [view $L info types] [view $S info types]
} {{S S I} {S S I} {S S I}}

test 7 {frequents data} {
  view $F dump
} { \
  drinker  bar       perweek
  -------  --------  -------
  adam     lolas           1
  woody    cheers          5
  sam      cheers          5
  norm     cheers          3
  wilt     joes            2
  norm     joes            1
  lola     lolas           6
  norm     lolas           2
  woody    lolas           1
  pierre   frankies        0}

test 8 {likes data} {
  view $L dump
} { \
  drinker  beer          perday
  -------  ------------  ------
  adam     bud                2
  wilt     rollingrock        1
  sam      bud                2
  norm     rollingrock        3
  norm     bud                2
  nan      sierranevada       1
  woody    pabst              2
  lola     mickies            5}

test 9 {open second mk file} -body {
  set E [vopen ../noarch/mkblk.db]
} -match glob -result {^*}

test 10 {subview names} {
  set U [view $E get 0 bv]
  view $U info names
} {_B}

test 11 {block sizes} {
  view $U counts _B
} {999 999 999 999 999 999 999 999 999 1000 9}

test 12 {access string in first file} {
  view $F get 1 1
} cheers

test 13 {access int in first file} {
  view $F get 1 2
} 5

test 14 {access fresh string in first file} {
  view $S get 1 1
} samaddams

test 15 {serves data from first file} {
  view $S dump
} { \
  bar       beer         quantity
  --------  -----------  --------
  cheers    bud               500
  cheers    samaddams         255
  joes      bud               217
  joes      samaddams          13
  joes      mickies          2222
  lolas     mickies          1515
  lolas     pabst             333
  winkos    rollingrock       432
  frankies  snafu               5}

test 16 {join F and L} {
  view $F join_i $L | dump
} { \
  drinker  bar     perweek  beer         perday
  -------  ------  -------  -----------  ------
  adam     lolas         1  bud               2
  woody    cheers        5  pabst             2
  sam      cheers        5  bud               2
  norm     cheers        3  rollingrock       3
  norm     cheers        3  bud               2
  wilt     joes          2  rollingrock       1
  norm     joes          1  rollingrock       3
  norm     joes          1  bud               2
  lola     lolas         6  mickies           5
  norm     lolas         2  rollingrock       3
  norm     lolas         2  bud               2
  woody    lolas         1  pabst             2}

test 17 {get from second data file} {
  view $U get 1 _B | first 5 | get 
} {s_1000 1000 s_1001 1001 s_1002 1002 s_1003 1003 s_1004 1004}

test 18 {open non-existent file} {
  list [catch { view [vopen blah,blah,blah] get # } e] $e
} {1 {blah,blah,blah: cannot open (error -1000)}}

test 19 {open non-metakit file} {
  list [catch { view [vopen [info script]] get # } e] $e
} "1 {[info script]: cannot open (error -1001)}"

test 20 {data stack is empty} {
  vfinish
} {}

cleanupTests

# vim: set ft=tcl :
