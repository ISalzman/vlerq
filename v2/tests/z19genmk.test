#!/usr/bin/tclsh
# z19genmk.test -=- test suite for saving via Mk4tcl
# %renumber<^test >%

set uses {thrill ratcl}
source [file join [file dirname [info script]] initests.tcl]

test 0 {setup test data} {
  set R [vdef A B C   {a b c d a f c b d}]
  set S [vdef D E F   {b g a d a f}]
  set T [vdef A B C D {a b c d a b e f b c e f e d c d e d e f a b d e}]
  set U [vdef C D E   {c d e c d f d e f}]
  set V [vdef C D     {c d e f}]
  set W [vdef A B C   {1 2 3 a b c}]
  set X [vdef D E:I F {a 100 aa b 20 bb c 3 cc}]
  set Y [vdef D       {y}]
  set Z [vdef E       {}]
  return
} {}

test 1 {setup paths} {
  set db [vdef R:V S:V [list $R $S]]
  view $db mk4name R
  view $db mk4name S
  array size ::thrill::v::names
} 2

test 2 {R orig} {
  view $R get
} {a b c d a f c b d}

test 3 {S orig} {
  view $S get
} {b g a d a f}

test 4 {start with no changes} {
  set ::thrill::v::commands
} {}

test 5 {make changes} {
  view $R set 1 C XYZ
  view $R set 2 1 ZYX
  view $R insert 3 $W 
  view $R insert 5 $W
  view $R delete 4 3 
  view $R set 3 1 VW
  view $R set 0 1 TU
  view $R delete 2 1
  view $R insert 2 $W
  view $R delete 0 3
  view $R insert 0 $W
  view $R set 1 A A C CC B BBB
  view $S set 1 2 ZYX 
  view $R append $W
  view $R replace 2 $W
  expr {$::thrill::v::commands ne ""}
} 1

test 6 {R changed} {
  view $R get
} {1 2 3 A BBB CC 1 2 3 a b c 1 2 3 a b c}

test 7 {S changed} {
  view $S get
} {b g a d a ZYX}

test 8 {saved commands} {
  return "  [join $::thrill::v::commands "\n  "]"
} { \
  mk::set db.R!1 C XYZ
  mk::set db.R!2 B ZYX
  mk::row insert db.R!3 2
  mk::set db.R!3 A 1 B 2 C 3
  mk::set db.R!4 A a B b C c
  mk::row insert db.R!5 2
  mk::set db.R!5 A 1 B 2 C 3
  mk::set db.R!6 A a B b C c
  mk::row delete db.R!4 3
  mk::set db.R!3 B VW
  mk::set db.R!0 B TU
  mk::row delete db.R!2 1
  mk::row insert db.R!2 2
  mk::set db.R!2 A 1 B 2 C 3
  mk::set db.R!3 A a B b C c
  mk::row delete db.R!0 3
  mk::row insert db.R!0 2
  mk::set db.R!0 A 1 B 2 C 3
  mk::set db.R!1 A a B b C c
  mk::set db.R!1 A A C CC B BBB
  mk::set db.S!1 F ZYX
  mk::row insert db.R!4 2
  mk::set db.R!4 A 1 B 2 C 3
  mk::set db.R!5 A a B b C c
  mk::row delete db.R!2 2
  mk::row insert db.R!2 2
  mk::set db.R!2 A 1 B 2 C 3
  mk::set db.R!3 A a B b C c}

test 9 {cleanup} {
  unset ::thrill::v::commands
  unset ::thrill::v::names
} {}

test 10 {create and open a MK test file} {
  file copy -force ../noarch/gtest.db z19test.db
  set db [vopen z19test.db]
  set f [view $db mk4name frequents]
  view $f get #
} 10

test 11 {make some changes} {
  view $f delete 3 2 
  view $f set 1 bar *1*
  # don't do "view $f append $f" because changes to $f would interfere with $f
  view $f append [view $f take 5]
  view $f set 10 drinker *2* 
  view $f cursor c
  array set c {# 7 perweek 123}
  view $f get #
} 13

test 12 {check result} {
  view $f dump
} { \
  drinker  bar       perweek
  -------  --------  -------
  adam     lolas           1
  woody    *1*             5
  sam      cheers          5
  norm     joes            1
  lola     lolas           6
  norm     lolas           2
  woody    lolas           1
  pierre   frankies      123
  adam     lolas           1
  woody    *1*             5
  *2*      cheers          5
  norm     joes            1
  lola     lolas           6}

test 13 {check saved commands} {
  llength $::thrill::v::commands
} 10

test 14 {commit via Metakit} metakit {
  set n [file size z19test.db]
  view $db commit z19test.db
  list $n [file size z19test.db] [llength $::thrill::v::commands]
} {590 823 0}

test 15 {read back changed file} metakit {
  set db [vopen z19test.db]
  set f [view $db get 0 frequents]
  view $f dump
} { \
  drinker  bar       perweek
  -------  --------  -------
  adam     lolas           1
  woody    *1*             5
  sam      cheers          5
  norm     joes            1
  lola     lolas           6
  norm     lolas           2
  woody    lolas           1
  pierre   frankies      123
  adam     lolas           1
  woody    *1*             5
  *2*      cheers          5
  norm     joes            1
  lola     lolas           6}

test 16 {data stack is empty} {
  catch { file delete z19test.db }
  vfinish
} {}

cleanupTests

# vim: set ft=tcl :
