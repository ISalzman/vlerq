#!/usr/bin/tclsh
# z15strvec.test -=- test suite for basic string and vector utility code
# %renumber<^test >%

set uses {thrill ratcl}
source [file join [file dirname [info script]] initests.tcl]

test 0 {thrive vm has been set up} {
  regexp {^::thrive_\d+$} $::thrill::v::ws
} 1

test 1 {dip} {
  ::thrill::vcall { ( 1 2 3 4 { + } dip ) }
} {1 5 4}

test 2 {vnew} {
  ::thrill::vcall { 6 vnew tlen }
} 6

test 3 {vfill} {
  ::thrill::vcall { 5 vnew 123 vfill }
} {123 123 123 123 123}

test 4 {find seps} {
  ::thrill::vcall { "abc/def/gh//ij/" { c@ 0x2F = } sel* }
} {3 7 10 11 14}

test 5 {vpop} -body {
  ::thrill::vcall { ( 1 2 3 ) 6 { drop vpop .p ', .p } rep* }
} -output {3,2,1,,,,}

test 6 {vpush} {
  ::thrill::vcall {
    ( 1 2 3 ) vpop drop 4 vpush 5 vpush 6 vpush 7 vpush
			8 vpush 9 vpush 10 vpush 11 vpush
  }
} {1 2 4 5 6 7 8 9 10 11}

test 7 {?dup} {
  ::thrill::vcall { ( 11 0 ?dup 22 1 ?dup 33 -1 ?dup 44 ) }
} {11 0 22 1 1 33 -1 -1 44}

test 8 {vrot} {
  ::thrill::vcall { ( 1 2 3 ) vrot }
} {2 3 1}

test 9 {vshift} -body {
  ::thrill::vcall { ( 1 2 3 ) 5 { drop vshift .p ', .p } rep* }
} -output {1,2,3,,,}

test 10 {vunshift} {
  ::thrill::vcall {
    ( 1 2 3 ) vpop drop 4 vunshift 5 vunshift 6 vunshift 7 vunshift
			8 vunshift 9 vunshift 10 vunshift 11 vunshift 
  }
} {11 10 9 8 7 6 5 4 1 2}

test 11 {sjoin 0} {
  ::thrill::vcall { ( ) ':: sjoin }
} {}

test 12 {sjoin 1} {
  ::thrill::vcall { ( "abc" ) ':: sjoin }
} abc

test 13 {sjoin 2} {
  ::thrill::vcall { ( "abc" "def" ) ':: sjoin }
} abc::def

test 14 {sjoin N} {
  ::thrill::vcall { ( 'a 'b 'c 'd 'e 'f ) ':: sjoin }
} a::b::c::d::e::f

test 15 {csplit} {
  ::thrill::vcall { "abc/def/gh//ij/" 0x2F csplit }
} {abc def gh {} ij {}}

test 16 {vfill} {
  ::thrill::vcall { ( 0 1 2 3 4 5 6 7 8 9 ) 'ee vfill }
} {ee ee ee ee ee ee ee ee ee ee}

test 17 {v,fill} {
  ::thrill::vcall { ( 0 1 2 3 4 5 6 7 8 9 ) 2 3 'ee v,fill }
} {0 1 ee ee ee 5 6 7 8 9}

test 18 {v..fill} {
  ::thrill::vcall { ( 0 1 2 3 4 5 6 7 8 9 ) 3 7 'ee v..fill }
} {0 1 2 ee ee ee ee 7 8 9}

test 19 {srep} {
  ::thrill::vcall { "abc" 5 srep }
} abcabcabcabcabc

test 20 {scat} {
  ::thrill::vcall { "abc" "DEF" scat }
} abcDEF

test 21 {scat 2x} {
  ::thrill::vcall { "abc" "DEF" scat "ghi" scat }
} abcDEFghi

test 22 {vdel} {
  ::thrill::vcall { ( 1 2 3 4 5 ) dup 2 vdel }
} {1 2 4 5}

test 23 {data stack is empty} {
  vfinish
} {}

cleanupTests

# vim: set ft=tcl :
