#!/usr/bin/tclsh
# z24filev3.test -=- test suite for the new version 3 file format
# %renumber<^test >%

set uses {thrill ratcl}
source [file join [file dirname [info script]] initests.tcl]
interp alias {} vcall {} ::thrill::vcall

test 0 {save nil} {
  set fd [open z24temp1.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 nS "" $fd]
  close $fd
  #puts [exec hexdump -C z24temp1.db]
  set r
} 13

test 1 {load nil} {
  set r [vcall v3open S z24temp1.db]
  catch { file delete z24temp1.db }
  set r
} {}

test 2 {save pos int} {
  set fd [open z24temp2.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 IS 7 $fd]
  close $fd
  #puts [exec hexdump -C z24temp2.db]
  set r
} 14

test 3 {load pos int} {
  set r [vcall v3open S z24temp2.db]
  catch { file delete z24temp2.db }
  set r
} 7

test 4 {save neg int} {
  set fd [open z24temp3.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 IS -7 $fd]
  close $fd
  #puts [exec hexdump -C z24temp3.db]
  set r
} 15

test 5 {load neg int} {
  set r [vcall v3open S z24temp3.db]
  catch { file delete z24temp3.db }
  set r
} -7

test 6 {save string} {
  set fd [open z24temp4.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 SS "abc" $fd]
  close $fd
  #puts [exec hexdump -C z24temp4.db]
  set r
} 17

test 7 {load string} {
  set r [vcall v3open S z24temp4.db]
  catch { file delete z24temp4.db }
  set r
} abc

test 8 {save vector} {
  set fd [open z24temp5.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 (I)S {1 2 3} $fd]
  close $fd
  #puts [exec hexdump -C z24temp5.db]
  set r
} 20

test 9 {load vector} {
  set r [vcall v3open S z24temp5.db]
  catch { file delete z24temp5.db }
  set r
} {1 2 3}

test 10 {save view} {
  set fd [open z24temp6.db w]
  fconfigure $fd -translation binary
  set v [vdef X:I {7 8 9}]
  set r [vcall ^save2 VS $v $fd]
  close $fd
  #puts [exec hexdump -C z24temp6.db]
  set r
} 49

test 11 {load view} {
  set r [vcall v3open S z24temp6.db]
  catch { file delete z24temp6.db }
  view $r dump
} { \
  X
  -
  7
  8
  9}

test 12 {save mixed list} {
  set fd [open z24temp7.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 (ISV)S [list 123 ABC $v] $fd]
  close $fd
  #puts [exec hexdump -C z24temp7.db]
  set r
} 58

test 13 {load mixed list} {
  set r [vcall v3open S z24temp7.db]
  catch { file delete z24temp7.db }
  lset r 2 [view [lindex $r 2] get]
} {123 ABC {7 8 9}}

test 14 {large fake view} {
  set v [view [vdef A B {1 2 3 4}] repeat 500000]
  view $v get #
} 1000000

test 15 {show derived view} {
  view $v describe
} {\
 -repeat
  +-view
  | +-A:S
  | +-B:S
  +-int}

test 16 {save derived view} {
  set fd [open z24temp8.db w]
  fconfigure $fd -translation binary
  set r [vcall ^save2 VS $v $fd]
  close $fd
  #puts [exec hexdump -C z24temp8.db]
  set r
} 85

test 17 {load derived view} {
  set r [vcall v3open S z24temp8.db]
  catch { file delete z24temp8.db }
  list [view $r get #] [view $r first 3 | get] [view $r last 3 | get]
} {1000000 {1 2 3 4 1 2} {3 4 1 2 3 4}}

test 18 {show loaded view structure} {
  view $r describe
} {\
 -repeat
  +-view
  | +-A:S
  | +-B:S
  +-int}

test 19 {save mutated view} {
  set v [vdef A B {a b c d}]
  view $v set 0 A aa B bb
  set fd [open z24temp9.db w]
  fconfigure $fd -translation binary
  set r [vcall { vsget swap ^save2 } SV $fd $v]
  close $fd
  #puts [exec hexdump -C z24temp9.db]
  set r
} 134

test 20 {load mutated view} {
  set r [vcall v3open S z24temp9.db]
  catch { file delete z24temp9.db }
  view $r get
} {aa bb c d}

test 21 {loaded mutated view structure} {
  view $r describe
} {\
 -mut
  +-view
  | +-A:S
  | +-B:S
  +-vec
  +-vec
  +-view
    +-A:S
    +-B:S}

test 22 {data stack is empty} {
  vfinish
} {}

cleanupTests

# vim: set ft=tcl :
