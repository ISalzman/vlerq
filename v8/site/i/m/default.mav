%# module/namespace browser
% set path [Web urldecode [string map {/ ::} [regsub {^/i/m} [REQ url] {}]]]

<h2>$path</h2>

% if {[string match *:: $path]} {
		[namespaces] [ensembles] [procs] [commands] [aliases] [variables] [arrays]
% } else {
  	<table cellspacing='3'>
%			foreach e [lsort -dict [array names $path]] {
%       set v [Web htmlize [set ${path}($e)]]
%       if {[string match *\n* $v]} { set v "<pre>$v</pre>"}
      	<tr><td valign=top>[Web htmlize $e]</td><td>$v</td></tr>
%	   	}
  	</table>
% }


<% DEF namespaces %>
<b>Namespaces</b>
<blockquote>
%	foreach ns [lsort [namespace children $path]] {
%		set t [namespace tail $ns]
 		[url $t [http::formatQuery $t]/]
%	}
</blockquote>


<% DEF procs %>
<b>Procs</b>
<blockquote>
%	foreach x [lsort [info procs $path*]] {
%		set t [namespace tail $x]
%	  set u [regsub /m [REQ url] /p][http::formatQuery $t]
 	  [url $t $u]
%	}
</blockquote>


<% DEF commands %>
<b>Commands</b>
<blockquote>
% set a [interp aliases]
% set p [info procs $path*]
%	foreach x [lsort [info commands $path*]] {
%		set t [namespace tail $x]
%   if {$x ni $p && $x ni $a && $t ni $a && ![namespace ensemble exists $x]} {
      $t
%   }
%	}
</blockquote>


<% DEF ensembles %>
<b>Ensembles</b>
<blockquote>
% set a [interp aliases]
% set p [info procs $path*]
%	foreach x [lsort [info commands $path*]] {
%   if {[namespace ensemble exists $x]} {
      [namespace tail $x]
%   }
%	}
</blockquote>


<% DEF aliases %>
<b>Aliases</b>
<blockquote>
%	foreach a [lsort [interp aliases]] {
%		if {$path eq "[namespace qualifiers $a]::"} {
 			[namespace tail $a] - [interp alias {} $a] <br/>
%		}
%	}
</blockquote>


<% DEF variables %>
<b>Variables</b>
<blockquote>
%	foreach v [lsort [info vars $path*]] {
%		set t [namespace tail $v]
%		if {![array exists $v]} {
%			if {[info exists $v]} {
 				$t = [Web htmlize [set $v]] <br/>
%			} else {
 				$t <br/>
%			}
%		}
%	}
</blockquote>


<% DEF arrays %>
<b>Arrays</b>
<blockquote>
%	foreach v [lsort [info vars $path*]] {
%		set t [namespace tail $v]
%		if {[array exists $v]} {
 			[url $t [http::formatQuery $t]] - [array size $v] entries<br/>
%		}
%	}
</blockquote>


<%
  package require http
  
	variable path
	
  proc url {text {url ""}} {
    return "<a href='$url'>$text</a>"
  }
%>
