% set url [REQ url]
% set dir [regsub {/i/f/} $url {}]
% set path [Rig home]/$dir
% if {[file isfile $path]} {
%#TODO deal with more file mime types
%   REQ H Content-Type text/plain
%   Web sendfile [REQ] $path
% } elseif {$dir eq ""} {
    <h3>~/</h3>
% } else {
%   set up [file dir $dir]
%   if {$up eq "."} { set up ~ } else { set up ~/$up }
    <h3><a href='[file dir $url]/'>$up</a>/[file tail $dir]/</h3>
% }

<table>
% foreach f [lsort -dict [glob -nocomplain -dir [Rig home]/$dir *]] {
%   set t [file tail $f]
    <tr>
%     if {[file isdir $f]} {
        <td></td>
        <td width=40 align=right>&lt;<a href="$url$t/">DIR</a>&gt;</td>
        <td>$t/</td>
%     } else {
        <td width=40 align=right>[showsize [file size $f]]</td>
        <td>[string map {{ } {&nbsp;}} [showdate [file mtime $f] dir]]</td>
        <td><a href="$url$t">$t</a></td>
%     }
    </tr>
% }
</table>


<%
  proc showsize {bytes} {
    if {$bytes > 1000000} {
      return "[format %.3g [expr {$bytes/(1000000.0)}]] Mb"
    }
    if {$bytes > 1000} {
      return "[format %.3g [expr {$bytes/1000.0}]] K"
    }
    return $bytes
  }
  proc showdate {{secs ""} {type short}} {
    switch -- $secs {
      ""  { set secs [clock seconds] }
      0   { return }
    }
    if {$type eq "dir" && $secs < [clock scan "2 months ago"]} {
      set type short
    } elseif {$type eq "day" && $secs < [clock scan "2 weeks ago"]} {
      set type year
    }
    set fmt [dict get {
      short {%Y-%m-%d}
      dir   {%Y-%m-%d  %H:%M}
      month {%b %Y}
      day   {%a, %b %d}
      year  {%b %d, %Y}
      full  {%Y-%m-%d %H:%M:%S}
    } $type]
    return [clock format $secs -format $fmt]
  }
%>