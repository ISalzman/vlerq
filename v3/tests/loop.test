#!/usr/bin/env tclkit
# vloop tests

source [file join [file dir [info script]] initests.tcl]

# %renumber<^\s*test >%

test 0 {load extension} {
  package require ratcl
} 3

test 1 {view exists} -body {
  view
} -returnCodes error -result {wrong # args: should be "view v ... | ..."}

set v [view {A B C} vdef {1 2 3 11 22 33 111 222 333}]

test 2 {} {
  set i 0
  view $v loop c { incr i }
  set i
} 3

test 3 {} {
  set r {}
  view $v loop c { lappend r $c(#) }
  set r
} {0 1 2}
  
test 4 {} {
  set r {}
  view $v loop c { lappend r $c(B) $c(A) }
  set r
} {2 1 22 11 222 111}

set w [view A vdef {1 2 3 4 5 6 7 8 9}]

test 5 {} {
  view $w loop c -index 1
} {0 1 2 3 4 5 6 7 8}

test 6 {} {
  view $w loop c -index { $c(A) % 2 }
} {0 2 4 6 8}

test 7 {} {
  view $w loop c -index { $c(A) > 3 && $c(A) < 6 }
} {3 4}

test 8 {} {
  view $w loop c -index { $c(A) == $c(#) + 1 }
} {0 1 2 3 4 5 6 7 8}

test 9 {} {
  view $w loop c -where 1 | get
} {1 2 3 4 5 6 7 8 9}
  
test 10 {} {
  view $w loop c -where { $c(A) % 2 } | get
} {1 3 5 7 9}
  
test 11 {} {
  view $w loop c -where { $c(A) > 3 && $c(A) < 6 } | get
} {4 5}
  
test 12 {} {
  view $w loop c -where { $c(A) == $c(#) + 1 } | get
} {1 2 3 4 5 6 7 8 9}

test 13 {loop var must end up in current namespace} {
  namespace eval t1 { view $w loop c1 -index { $c1(A) % 2 } }
  list [info exists c1] [array get t1::c1]
} {0 {A 9}}
namespace forget t1

unset c
test 14 {loop with parray} -body {
  view {A B C} vdef {1 2 3 11 22 33 111 222 333} | loop c {parray c}
} -output {}

test 15 {loop on single column} {
  set r {}
  view A vdef {1 2 3} | loop c { lappend r $c(A) }
  set r
} {1 2 3}
unset c

set c 1
test 16 {try to loop on non-array} -body {
  set r {}
  view A vdef {1 2 3} | loop c { lappend r $c(A) }
  set r
} -returnCodes error -result {can't trace "c(#)": variable isn't array}
unset c

test 17 {tiny loop result index} {
  vlerq::vinfo c [view 10 loop -index {$(#) % 2}]
} {bytes -1 type col refs 1 count 5}

test 18 {small loop result index} {
  vlerq::vinfo c [view 100 loop -index {$(#) % 2}]
} {bytes -1 type col refs 1 count 50}

test 19 {medium loop result index} {
  vlerq::vinfo c [view 1000 loop -index {$(#) % 2}]
} {bytes -1 type col refs 1 count 500}

test 20 {large loop result index} {
  vlerq::vinfo c [view 10000 loop -index {$(#) % 2}]
} {bytes -1 type col refs 1 count 5000}

::tcltest::cleanupTests
