#!/usr/bin/env tclkit
# string-based view tests

source [file join [file dir [info script]] initests.tcl]

# %renumber<^\s*test >%

test 0 {load ratcl} {
  package require ratcl
} 3

test 1 {view exists} -body {
  view
} -returnCodes error -result {wrong # args: should be "view v ... | ..."}

test 2 {setup test data} {
  set R {vdef {A B C}   {a b c d a f c b d}}
  set S {vdef {D E F}   {b g a d a f}}
  set T {vdef {A B C D} {a b c d a b e f b c e f e d c d e d e f a b d e}}
  set U {vdef {C D E}   {c d e c d f d e f}}
  set V {vdef {C D}     {c d e f}}
  set W {vdef {A B C}   {1 2 3 a b c}}
  set X {vdef {D E:I F} {a 100 aa b 20 bb c 3 cc}}
  set Y {vdef D         {y}}
  set Z {vdef E         {}}
  set r {}
  foreach v {R S T U V W X Y Z} { lappend r [vget [set $v] #] }
  set r
} {3 2 6 3 2 2 3 1 0}

test 3 {concat} {
  set v [list concat $R $W]
  list [view $v names] [view $v structure] [vget $v]
} {{A B C} SSS {a b c d a f c b d 1 2 3 a b c}}

test 4 {pair} {
  set v [list pair $W $X] 
  list [view $v names] [view $v structure] [vget $v]
} {{A B C D E F} SSSSIS {1 2 3 a 100 aa a b c b 20 bb}}

test 5 {product} {
  set v [list product $W $S] 
  list [view $v names] [view $v structure] [vget $v]
} {{A B C D E F} SSSSSS {1 2 3 b g a 1 2 3 d a f a b c b g a a b c d a f}}

test 6 {remap rows} {
  set v [list remap $T {2 1 0 4 5}] 
  list [view $v names] [view $v structure] [vget $v]
} {{A B C D} SSSS {b c e f a b e f a b c d e d e f a b d e}}

test 7 {remap columns} {
  set v [list cremap $T {2 3 1}]
  list [view $v names] [view $v structure] [vget $v]
} {{C D B} SSS {c d b e f b e f c c d d e f d d e b}}

test 8 {mapcols} {
  set v [list mapcols $T A B] 
  list [view $v names] [view $v structure] [view $v get]
} {{A B} SS {a b a b b c e d e d a b}}

test 9 {columns unique} {
  set v [list unique [list mapcols $T A B]]
  list [view $v names] [view $v structure] [view $v get]
} {{A B} SS {a b b c e d}}

test 10 {group} {
  set v [list group $T A B G]
  list [view $v names] [view $v structure] [view $v project A B | get]
} {{A B G} SS(SS) {a b b c e d}}

test 11 {group in} {
  list group $T A B G
} {group {vdef {A B C D} {a b c d a b e f b c e f e d c d e d e f a b d e}}\
         A B G}

test 12 {group result} {
  set v [view $T group A B G]
# FIXME: fails if $v is not forced from list to string rep first!!!
set x a$v
  list [vget $v #] $v
} {3 {group {vdef {A B C D} {a b c d a b e f b c e f e d c d e d e f a b d e}}\
            A B G}}

test 13 {ungroup} {
  set v [list ungroup [list group $T A B G] G]
  list [view $v names] [view $v structure] [view $v get]
} {{A B C D} SSSS {a b c d a b e f a b d e b c e f e d c d e d e f}}

::tcltest::cleanupTests
