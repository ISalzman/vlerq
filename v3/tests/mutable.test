#!/usr/bin/env tclkit
# mutable view tests

source [file join [file dir [info script]] initests.tcl]

# %renumber<^\s*test >%

test 0 {load ratcl} {
  package require ratcl
} 3

test 1 {view exists} -body {
  view
} -returnCodes error -result {wrong # args: should be "view v ... | ..."}

set v [view {A B C} vdef {1 2 3 11 22 33 111 222 333}]

test 2 {set one item} {
  set w [view $v set 1 B x22]
} {mutable {vdef {A B C} {1 2 3 11 22 33 111 222 333}}\
           3 {{} 1 {}} {{} x22 {}} {} {} {}}

test 3 {check row count is still 3} {
  vget $w #
} 3
  
test 4 {examine internal data} {
  vlerq::vinfo * $w
} {bytes 84 type view refs 2 vsize 3 sizer cmd_sizer}
  
test 5 {verify new contents} {
  vget $w
} {1 2 3 11 x22 33 111 222 333}
  
test 6 {check v has not changed} {
  vget $v
} {1 2 3 11 22 33 111 222 333}
  
test 7 {insert one row} {
  set w [view $v insert 1 [view {A B C} vdef {x y z}]]
} {mutable {vdef {A B C} {1 2 3 11 22 33 111 222 333}}\
           4 {{} {} {}} {{} {} {}} {} 1 {{vdef {A B C} {x y z}}}}
  
test 8 {insert one row} {
  vget $w #
} 4
  
test 9 {examine internal data} {
  vlerq::vinfo * $w
} {bytes 105 type view refs 2 vsize 4 sizer cmd_sizer}
  
test 10 {verify new contents} {
  vget $w
} {1 2 3 x y z 11 22 33 111 222 333}
  
test 11 {check v has not changed} {
  vget $v
} {1 2 3 11 22 33 111 222 333}
  
test 12 {delete one row} {
  set w [view $v delete 1 1]
} {mutable {vdef {A B C} {1 2 3 11 22 33 111 222 333}}\
           2 {{} {} {}} {{} {} {}} {1 1} {} {}}
  
test 13 {delete one row} {
  vget $w #
} 2
  
test 14 {examine internal data} {
  vlerq::vinfo * $w
} {bytes 87 type view refs 2 vsize 2 sizer cmd_sizer}
  
test 15 {verify new contents} {
  vget $w
} {1 2 3 111 222 333}
  
test 16 {check v has not changed} {
  vget $v
} {1 2 3 11 22 33 111 222 333}

test 17 {set one item in subview} -body {
  set w [view $v group A G]
  view $w get 0 G | set 1 B bb
} -match glob -result {at {mu* {at {group {vdef {A B C} *} A G} 0 1}\
                               1 {1 0} {bb {{mu* {at {group {vdef *} A G} 0 1}\
                                                 1 {1 {}} {bb {}} {} {} {}}}}\
                               {} {} {}}\
                          0 1}

test 18 {setup a nested test} -body {
  set v [view {A B C} vdef {a b c} | group A B Y | group A X]
  puts [view $v dump]
  puts [view $v get 0 X | dump]
  puts [view $v get 0 X 0 Y | dump]
  view $v struct_mk
} -output { \
  A  X 
  -  --
  a  #1
  B  Y 
  -  --
  b  #1
  C
  -
  c
} -result {A:S,X[B:S,Y[C:S]]}

test 19 {set up a reference} {
  set w [view v ref]
  set x [view $w get 0 X]
  set y [view $w get 0 X 0 Y]
  list [view $w struct_mk] [view $x struct_mk] [view $y struct_mk]
} {{A:S,X[B:S,Y[C:S]]} {B:S,Y[C:S]} C:S}
  
test 20 {verify paths} xx {
  list $w $x $y
} {{ref v} {at {ref v} 0 1} {at {at {ref v} 0 1} 0 1}}

test 21 {verify dependencies and origin} xx {
  list [vlerq::vinfo do $w] [vlerq::vinfo do $x] [vlerq::vinfo do $y]
} {{bytes 5 type view refs 4 deps v orig {ref v}}\
   {bytes 14 type view refs 2 deps v orig {at {ref v} 0 1}}\
   {bytes 23 type view refs 2 deps v orig {at {at {ref v} 0 1} 0 1}}}

test 22 {} xx {
#set y [view $v get 0 X 0 Y]
#puts v-$v
#puts y-$y
#puts [view {at {group {group {vdef {A B C} {a b c}} A B Y} A X} 0 1} dump]
#puts [view {at {at {group {group {vdef {A B C} {a b c}} A B Y} A X} 0 1} 0 1} dump]
#puts [view {group {vdef {A B C} {a b c}} A B Y} dump]
puts 0
puts [view {group {group {vdef {A B C} {a b c}} A B Y} A X} get 0 X 0 Y]
set z {mset {at {at {group {group {vdef {A B C} {a b c}} A B Y} A X} 0 1} 0 1} 0 C c1}
puts 1
#puts [view $z get 0 X 0 Y | dump]
puts [view $z dump]
puts 2
puts [view $z get 0 C]
puts 3
set y {at {at {group {group {vdef {A B C} {a b c}} A B Y} A X} 0 1} 0 1}
  view $y set 0 C c1
} {at {at {ref v} 0 1} 0 1}
  
test 23 {} xx {
  view $y set 0 C c2 | get
} c2
  
test 24 {} xx {
  view {at {at {ref v} 0 0} 0 0} set 0 C c3 | get
} c3

proc mytracer {args} { puts "  mytracer $args" }
  
test 25 {ref command trigger} -body {
  set v [view {A B C} vdef a b c]
  set w [view v ref mytracer haha]
  puts ""
  view $w set 0 B bb
  view $w insert 0 [view {A B C} vdef 1 2 3]
  view $w delete 1 1
  view $w get
} -output {
  mytracer haha v set 0 B bb
  mytracer haha v insert 0 {vdef {A B C} 1 2 3}
  mytracer haha v delete 1 1
} -result {a b c}
  
unset v
  
::tcltest::cleanupTests
