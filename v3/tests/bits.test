#!/usr/bin/env tclkit
# bitwise logic tests

source [file join [file dir [info script]] initests.tcl]

# default uses a test file with matching byte order (see also endian.test)
if {![info exists testfile]} {
  switch $tcl_platform(byteOrder) {
    littleEndian { set testfile l.kit }
    bigEndian { set testfile l.kit-be }
  }
}

# %renumber<^\s*test >%

test 0 {load extension} {
  package require vlerq
} 3

test 1 {vget exists} -body {
  vget
} -returnCodes error -result {wrong # args: should be "vget view ..."}

test 2 {int bits} {
  set o {}
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {1<<$i}] 0] 2]
  }
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {(1<<$i)+1}] 0] 2]
  }
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {(1<<$i)-1}] 0] 2]
  }
  set o
} {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\
    16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\
   1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\
    16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\
   -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\
    15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30}

test 3 {int widths} {
  set o {}
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {1<<$i}] 0] 3]
  }
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {(1<<$i)+1}] 0] 3]
  }
  for {set i 0} {$i < 32} {incr i} {
    lappend o [lindex [vlerq::ibytes [expr {(1<<$i)-1}] 0] 3]
  }
  set o
} {1 2 3 3 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 0\
   2 2 3 3 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 0\
   0 1 2 3 3 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6}

test 4 {int vectors} {
  set o {}
  foreach x {0 1 2 3 4 14 15 16 126 127 128 32766 32767 32768
              -1 -127 -128 -129 -32767 -32768 -32769} {
    set t $x
    set y {}
    for {set i 0} {$i < 10} {incr i} {
      lappend y $x
      lappend t [string length [vlerq::ibytes $y 1]]
    }
    lappend o $t
  }
  set o
} {{0 0 0 0 0 0 0 0 0 0 0}\
   {1 3 3 4 5 1 1 1 1 2 2}\
   {2 5 5 1 1 2 2 2 2 3 3}\
   {3 5 5 1 1 2 2 2 2 3 3}\
   {4 6 1 2 2 3 3 4 4 5 5}\
   {14 6 1 2 2 3 3 4 4 5 5}\
   {15 6 1 2 2 3 3 4 4 5 5}\
   {16 1 2 3 4 5 6 7 8 9 10}\
   {126 1 2 3 4 5 6 7 8 9 10}\
   {127 1 2 3 4 5 6 7 8 9 10}\
   {128 2 4 6 8 10 12 14 16 18 20}\
   {32766 2 4 6 8 10 12 14 16 18 20}\
   {32767 2 4 6 8 10 12 14 16 18 20}\
   {32768 4 8 12 16 20 24 28 32 36 40}\
   {-1 1 2 3 4 5 6 7 8 9 10}\
   {-127 1 2 3 4 5 6 7 8 9 10}\
   {-128 1 2 3 4 5 6 7 8 9 10}\
   {-129 2 4 6 8 10 12 14 16 18 20}\
   {-32767 2 4 6 8 10 12 14 16 18 20}\
   {-32768 2 4 6 8 10 12 14 16 18 20}\
   {-32769 4 8 12 16 20 24 28 32 36 40}}

::tcltest::cleanupTests
