#!/usr/bin/env tclkit
# save and reload tests

source [file join [file dir [info script]] initests.tcl]

# %renumber<^\s*test >%

test 0 {load ratcl} {
  package require ratcl
} 3

test 1 {view exists} -body {
  view
} -returnCodes error -result {wrong # args: should be "view v ... | ..."}

test 2 {create a suitable top-level} {
  set v1 [view {X A B C} vdef {x a b c x d a f x c b d}]
  set v2 [view $v1 group X V | mapcols V]
  view $v2 dump
} { \
  V 
  --
  #3}

test 3 {check its subview} {
  view $v2 get 0 0 | dump
} { \
  A  B  C
  -  -  -
  a  b  c
  d  a  f
  c  b  d}

test 4 {save as mk file} {
  set r [view $v1 save temp0.db]
  #puts [exec hexdump -C temp0.db]
  set r
} 90

test 5 {load mk file back in} -body {
  set v3 [view temp0.db mapf]
  view $v3 dump
} -result { \
  X  A  B  C
  -  -  -  -
  x  a  b  c
  x  d  a  f
  x  c  b  d} -cleanup { unset v3; file delete temp0.db }

if 0 { ;# for reference, show the file created by MK
  mk::file open db
  mk::view layout db.V {A B C}
  mk::row append db.V A a B b C c
  mk::row append db.V A d B a C f
  mk::row append db.V A c B b C d
  set fd [open temp.mk w]
  mk::file save db $fd
  close $fd
  puts [exec hexdump -C temp.mk]
  set v [view temp.mk mapf]
  puts [view $v get 0 V | dump]
  unset v
  file delete temp.mk
}

test 6 {save as mk file} {
  set r [view $v2 save temp1.db]
  #puts [exec hexdump -C temp1.db]
  set r
} 81

test 7 {load mk file back in} {
  set v3 [view temp1.db mapf]
  view $v3 dump
} { \
  V 
  --
  #3}

test 8 {check loaded subview} -body {
  view $v3 get 0 V | dump
} -result { \
  A  B  C
  -  -  -
  a  b  c
  d  a  f
  c  b  d} -cleanup { unset v3; file delete temp1.db  }

test 9 {save one mk file as another} {
  set x [view [file dirname [info script]]/gtest.db mapf]
  set fd [open temp2.db w]
  fconfigure $fd -translation binary
  set r [view $x save -to $fd]
  close $fd
  #puts [exec hexdump -C temp2.db]
  set r
} 590

test 10 {} {
  view $x get 0 frequents | struct_mk
} {drinker:S,bar:S,perweek:I}
  
test 11 {} {
  view $x struct_mk
} {frequents[drinker:S,bar:S,perweek:I],likes[drinker:S,beer:S,perday:I],serves[bar:S,beer:S,quantity:I]}

test 12 {} {
  view $x structure
} {(SSI)(SSI)(SSI)}

test 13 {load mk file back in} {
  set v3 [view temp2.db mapf]
  catch { file delete temp2.db }
  view $v3 dump
} { \
  frequents  likes  serves
  ---------  -----  ------
        #10     #8      #9}

test 14 {} {
  view $v3 struct_mk
} {frequents[drinker:S,bar:S,perweek:I],likes[drinker:S,beer:S,perday:I],serves[bar:S,beer:S,quantity:I]}

test 15 {check loaded subview} {
  set f [view $v3 get 0 frequents]
  list [view $f names] [view $f structure] [view $f get #]
} {{drinker bar perweek} SSI 10}

test 16 {check actual subview contents} {
  view $v3 get 0 likes | dump
} { \
  drinker  beer          perday
  -------  ------------  ------
  adam     bud                2
  wilt     rollingrock        1
  sam      bud                2
  norm     rollingrock        3
  norm     bud                2
  nan      sierranevada       1
  woody    pabst              2
  lola     mickies            5}

test 17 {save as string} {
  string length [view $v3 save]
} 590

test 18 {save and reload as string} {
  set s [view $v1 save]
  view $s load | get
} {x a b c x d a f x c b d}

test 19 {save and reload via channel} {
  set fd [open temp3.db w+]
  view $v1 save -to $fd
  seek $fd 0
  set r [view $fd chan | get]
  close $fd
  file delete temp3.db
  set r
} {x a b c x d a f x c b d}

test 20 {save derived as mk file} -body {
  set t [view A:I vdef {3 4 5}]
  set s [view A:I vdef {1 2} | concat $t | save temp4.db]
  #puts [exec hexdump -C temp4.db]
  file size temp4.db
} -result 35 -cleanup { file delete temp4.db }

test 21 {demo} {
  view {X Y} vdef {1 2 3 4 5 6} | dump
} { \
  X  Y
  -  -
  1  2
  3  4
  5  6}
 
test 22 {demo} {
  view {X Y} vdef {1 2 3 4 5 6} | to v | dump
} { \
  X  Y
  -  -
  1  2
  3  4
  5  6}

test 23 {demo} {
  view {X Y} vdef {1 2 3 4 5 6} | to v
  view $v dump
} { \
  X  Y
  -  -
  1  2
  3  4
  5  6}

test 24 {demo} {
  view {X Y} vdef {1 2 3 4 5 6} | to x
  view $x pair [view $x collect { $(X) + $(Y) } | asview Z] | dump
} { \
  X  Y  Z 
  -  -  --
  1  2  3 
  3  4  7 
  5  6  11}
 
test 25 {save demo} {
  view {X Y Z} vdef 1 2 3 | repeat 1000 | save demo.tmp
} 6815
 
test 26 {read back demo} {
  view demo.tmp open | first 3 | dump
} { \
  X  Y  Z
  -  -  -
  1  2  3
  1  2  3
  1  2  3} 

test 27 {save demo} -body {
  view {X:I Y:I Z:I} vdef 1 2 3 | repeat 1000 | save demo.tmp
} -result 674 -cleanup { file delete demo.tmp }

::tcltest::cleanupTests
