#!/usr/bin/env tclsh
# %renumber<^\s*test >%

source [file join [file dir [info script]] initests.tcl]

interp alias {} luas {} tvq "gs" dostring

test 0 {} {
    package require tvq
} $version

test 1 {} {
    tvq "go" type blah
} userdata

test 2 {} skip {
    tvq "gs" print "Looney tickles!"
} {}

test 3 {} {
    tvq "gs" dofile "../lvq/src/lvq.lua"
} {}

test 4 {} {
    list [catch { tvq "gt" assert 0 } e] $e
} {1 {assertion failed!}}

test 5 {} {
    luas { return 1+2*3 }
} 7

test 6 {} skip {
    tvq "gs" dofile "../lvq/tests/test.lua"
} {}

test 7 {} {
    luas { function setglobal(x,y) _G[x]= y end }
    tvq "gsc" setglobal tcl "" ;# empty cmd prefix, but still a callback
    tvq "gsss" tcl set _ "a b c"
} "a b c"

test 8 {errors in tcl callback} {
    luas { function setglobal(x,y) _G[x]= y end }
    tvq "gsc" setglobal tcl "" ;# empty cmd prefix, but still a callback
    list [catch { tvq "gs" tcl set } e] $e
} {1 {tvq: wrong # args: should be "set varName ?newValue?"}}

test 9 {output in tcl callback} -body {
    tvq "gss" tcl puts "Hello Tcl!"
} -output "Hello Tcl!\n"

test 10 {error in lua} {
    list [catch { tvq "g" io } e] $e
} {1 {attempt to call a table value}}

::tcltest::cleanupTests
