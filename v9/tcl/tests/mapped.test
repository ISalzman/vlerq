# V9 memory-mapped data and file tests, compatible with Metakit
# 2009-05-08 <jcw@equi4.com> http://opensource.org/licenses/mit-license.php
# $Id$
# %renumber<^\s*test mapped->%

source [file join [file dirname [info script]] setup.tcl]

test mapped-0 {load and check V9x package} { package require V9x } $version

# tiny.db - little-endian (not Metakit-compatible: no top-level views)
#   abc:I
set T [binary format H* [join {
    4a4c1a000000002c05002c004d01ae08672b80856162633a49858a888000
    00000000001c8000000a00000012
} ""]]

# tiny.db - big-endian (not Metakit-compatible: no top-level views)
#   abc:I
set U [binary format H* [join {
    4c4a1a000000002c0005002c014d08ae2b6780856162633a49858a888000
    00000000001c8000000a00000012
} ""]]

# simple.db - little-endian
#   v[abc:I]
set S [binary format H* [join {
    4a4c1a000000003d01000000160000004d0100005c11000003d900008085
    94888088765b6162633a495d81849c800000000000002d8000000d000000
    20
} ""]]

# alltypes.db - little-endian
#   v[i0:I,i1:I,i2:I,i4:I,i8:I,i16:I,i32:I,l:L,f:F,d:D,s,b:B]
set A [binary format H* [join {
    4a4c1a000000014b15190361cd038196cddc83018016804d815c91035901
    000000160000004d0100005c11000003d900006f000000000000000e6403
    00000000005543de13000000001c07f47a67000000e3b88a5b46f9010000
    00c03f0000b44100c0a64300e48a45800359473333333333332640333333
    33335ca1406666666654581441cdcccce0583185419a9931ce30b2f44173
    310073323200733333330073343434340073353535353500436507623131
    623232323262333333333333623434343434343434623535353535353535
    353553970b80858081888289838b858e8a93949da8b194d9a8ed99019583
    01ae80a301b18301d48080bb765b69303a492c69313a492c69323a492c69
    343a492c69383a492c6931363a492c6933323a492c6c3a4c2c663a462c64
    3a442c733a532c623a425d81a301d7800000000000013b80000041000000
    fa
} ""]]

# gtest.db - little-endian
#   frequents[drinker:S,bar:S,perweek:I],likes[...],serves[...]
set G [binary format H* [join {
    4a4c1a000000024e6164616d00776f6f64790073616d006e6f726d007769
    6c74006e6f726d006c6f6c61006e6f726d00776f6f647900706965727265
    0065545555766c6f6c617300636865657273006368656572730063686565
    7273006a6f6573006a6f6573006c6f6c6173006c6f6c6173006c6f6c6173
    006672616e6b6965730076775566965135122601808ab58885bd80c0c285
    0182808501876164616d0077696c740073616d006e6f726d006e6f726d00
    6e616e00776f6f6479006c6f6c61005554455662756400726f6c6c696e67
    726f636b0062756400726f6c6c696e67726f636b00627564007369657272
    616e6576616461007061627374006d69636b69657300c4c4d48612321252
    8088a7019c8401c380bf01c78402868084028a6368656572730063686565
    7273006a6f6573006a6f6573006a6f6573006c6f6c6173006c6f6c617300
    77696e6b6f73006672616e6b6965730077556576096275640073616d6164
    64616d73006275640073616d616464616d73006d69636b696573006d6963
    6b69657300706162737400726f6c6c696e67726f636b00736e61667500a4
    a488c606f401ff00d9000d00ae08eb054d01b00105008089b902a18502da
    80c402df8503a3809203a880e56672657175656e74735b6472696e6b6572
    3a532c6261723a532c7065727765656b3a495d2c6c696b65735b6472696e
    6b65723a532c626565723a532c7065726461793a495d2c7365727665735b
    6261723a532c626565723a532c7175616e746974793a495d8190018c9302
    8e9303ba800000000000023e80000071000001cd
} ""]]

# gtest-be.db - big-endian
#   frequents[drinker:S,bar:S,perweek:I],likes[...],serves[...]
set H [binary format H* [join {
    4c4a1a000000024e6164616d00776f6f64790073616d006e6f726d007769
    6c74006e6f726d006c6f6c61006e6f726d00776f6f647900706965727265
    0065545555766c6f6c617300636865657273006368656572730063686565
    7273006a6f6573006a6f6573006c6f6c6173006c6f6c6173006c6f6c6173
    006672616e6b6965730076775566965135122601808ab58885bd80c0c285
    0182808501876164616d0077696c740073616d006e6f726d006e6f726d00
    6e616e00776f6f6479006c6f6c61005554455662756400726f6c6c696e67
    726f636b0062756400726f6c6c696e67726f636b00627564007369657272
    616e6576616461007061627374006d69636b69657300c4c4d48612321252
    8088a7019c8401c380bf01c78402868084028a6368656572730063686565
    7273006a6f6573006a6f6573006a6f6573006c6f6c6173006c6f6c617300
    77696e6b6f73006672616e6b6965730077556576096275640073616d6164
    64616d73006275640073616d616464616d73006d69636b696573006d6963
    6b69657300706162737400726f6c6c696e67726f636b00736e61667500a4
    a488c60601f400ff00d9000d08ae05eb014d01b000058089b902a18502da
    80c402df8503a3809203a880e56672657175656e74735b6472696e6b6572
    3a532c6261723a532c7065727765656b3a495d2c6c696b65735b6472696e
    6b65723a532c626565723a532c7065726461793a495d2c7365727665735b
    6261723a532c626565723a532c7175616e746974793a495d8190018c9302
    8e9303ba800000000000023e80000071000001cd
} ""]]

test mapped-1 {proper length of the $T, $U, $S, $A, $G, and $H binary datasets} {
    list [string length $T] [string length $U] [string length $S] \
         [string length $A] [string length $G] [string length $H]
} {44 44 61 331 590 590}

test mapped-2 {set up mapped data view based on little-endian $T} {
    set M [list vmap $T]
    string length $M
} 51

test mapped-3 {meta-view of mapped data view} {
    v9 meta $M
} abc:I

test mapped-4 {size of mapped data view} {
    v9 size $M
} 5

test mapped-5 {contents of mapped data view} {
    v9 get $M
} {5 44 333 2222 11111}

test mapped-6 {set up mapped data view based on big-endian $U} {
    set M [list vmap $U]
    string length $M
} 51

test mapped-7 {meta-view of mapped data view} {
    v9 meta $M
} abc:I

test mapped-8 {size of mapped data view} {
    v9 size $M
} 5

test mapped-9 {contents of mapped data view} {
    v9 get $M
} {5 44 333 2222 11111}

test mapped-10 {set up mapped data view based on $S} {
    set M [list vmap $S]
    string length $M
} 68

test mapped-11 {meta-view of mapped data view} {
    v9 meta $M
} {v[abc:I]}

test mapped-12 {meta-view of mapped data subview} {
    v9 meta [v9 at $M 0 0]
} abc:I

test mapped-13 {size of mapped data view} {
    v9 size $M
} 1

test mapped-14 {size of mapped data subview} {
    v9 size [v9 at $M 0 0]
} 5

test mapped-15 {contents of mapped data view} {
    set R [v9 get $M]
    lset R 0 1 1 * ;# omit the binary data from the return value
} "{at {vmap *} 0 0}"

test mapped-16 {contents of mapped data subview} {
    v9 get [v9 at $M 0 0]
} {1 22 333 4444 55555}

test mapped-17 {set up mapped data view based on $A} {
    set M [list vmap $A]
    string length $M
} 338

test mapped-18 {meta-view of mapped data view} {
    v9 meta $M
} {v[i0:I,i1:I,i2:I,i4:I,i8:I,i16:I,i32:I,l:L,f:F,d:D,s:S,b:B]}

test mapped-19 {meta-view of mapped data subview} {
    v9 meta [v9 at $M 0 0]
} {i0:I,i1:I,i2:I,i4:I,i8:I,i16:I,i32:I,l:L,f:F,d:D,s:S,b:B}

test mapped-20 {size of mapped data view} {
    v9 size $M
} 1

test mapped-21 {size of mapped data subview} {
    v9 size [v9 at $M 0 0]
} 5

test mapped-22 {contents of mapped data view} {
    v9 dump [v9 at $M 0 0]
} { \
  i0  i1  i2  i4  i8    i16     i32    l                f        d             s       b  
  --  --  --  --  ----  ------  -----  ---------------  -------  ------------  ------  ---
   0   1   1   1  -127  -32767      1              111      1.5          11.1  s1       3b
   0   0   2   6  -106  -32746     22           222222     22.5        2222.1  s22      5b
   0   1   1  13   -51  -32435    333        333333333    333.5      333333.1  s333     7b
   0   0   0  12   -36  -28324   4444     444444444444   4444.5    44444444.1  s4444    9b
   0   1   3   3  -125   22787  55555  555555555555555  55555.5  5555555555.1  s55555  11b}

cleanup {A G H M R S T U}
