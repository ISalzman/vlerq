# V9 basic smoke tests to make sure a minimal core is working properly
# 2009-05-08 <jcw@equi4.com> http://opensource.org/licenses/mit-license.php
# $Id$
# %renumber<^\s*test >%

source [file join [file dirname [info script]] setup.tcl]

if {"V9x" in [concat {*}[info loaded]]} {
    puts "  V9x loaded"
} else {
    puts "  V9x NOT loaded"
}

test 0 {} { package require V9 } $version

set V {vdat A:I,B:I {1 11 111} {2 22 222}}
set M name:S,type:I,subv:V

test 1  {} { v9 size ""        } 0
test 2  {} { v9 size 123       } 123
test 3  {} { v9 size A:I,B:I   } 2
test 4  {} { v9 size $V        } 3
test 5  {} { v9 size $M        } 3
test 6  {} { v9 size [incr I]  } 1

# make sure a pure-int list can be turned into a string once cast to a view
test 7  {} { set J [list $I]; v9 size $J; set J } 1
                                
test 8  {} { v9 meta ""        } $M           
test 9  {} { v9 meta 123       } ""
test 10 {} { v9 meta A:I,B:I   } $M           
test 11 {} { v9 meta $V        } A:I,B:I
test 12 {} { v9 meta $M        } $M           
                                
# make sure a meta-view list can be turned into a string once cast to a view
test 13  {} { set J [list [v9 meta ""]]; v9 size $J; set J } $M
                                
test 14 {} { v9 at A:I,B:I 0 0 } A
test 15 {} { v9 at A:I,B:I 0 1 } 1
test 16 {} { v9 at A:I,B:I 0 2 } ""
test 17 {} { v9 at A:I,B:I 1 0 } B
test 18 {} { v9 at A:I,B:I 1 1 } 1
test 19 {} { v9 at A:I,B:I 1 2 } ""

test 20 {} { v9 at $V 0 0      } 1
test 21 {} { v9 at $V 0 1      } 2
test 22 {} { v9 at $V 1 0      } 11
test 23 {} { v9 at $V 1 1      } 22
test 24 {} { v9 at $V 2 0      } 111
test 25 {} { v9 at $V 2 1      } 222

test 26 {} { v9 at $M 0 0      } name
test 27 {} { v9 at $M 0 1      } 5
test 28 {} { v9 at $M 0 2      } ""
test 29 {} { v9 at $M 1 0      } type
test 30 {} { v9 at $M 1 1      } 1
test 31 {} { v9 at $M 1 2      } ""
test 32 {} { v9 at $M 2 0      } subv
test 33 {} { v9 at $M 2 1      } 7
test 34 {} { v9 at $M 2 2      } ""

test 35 {} { v9 names ""       } {name type subv}
test 36 {} { v9 names 123      } {}
test 37 {} { v9 names A:I,B:I  } {name type subv}
test 38 {} { v9 names $V       } {A B}
test 39 {} { v9 names $M       } {name type subv}
                               
test 40 {} { v9 types ""       } {S I V}
test 41 {} { v9 types 123      } {}
test 42 {} { v9 types A:I,B:I  } {S I V}
test 43 {} { v9 types $V       } {I I}
test 44 {} { v9 types $M       } {S I V}

test 45 {} { v9 width ""       } 3
test 46 {} { v9 width 123      } 0
test 47 {} { v9 width A:I,B:I  } 3
test 48 {} { v9 width $V       } 2
test 49 {} { v9 width $M       } 3

test 50 {} { v9 get $V * 0     } {1 11 111}
test 51 {} { v9 get $V * A     } {1 11 111}
test 52 {} { v9 get $V * 1     } {2 22 222}
test 53 {} { v9 get $V * B     } {2 22 222}

test 54 {} { v9 get $V 0 *     } {1 2}
test 55 {} { v9 get $V 1 *     } {11 22}
test 56 {} { v9 get $V 2 *     } {111 222}

test 57 {} { v9 get $V #       } 3

test 58 {} { v9 get $V @       } A:I,B:I
test 59 {} { v9 get $V @ #     } 2

test 60 {} { v9 get $M @ 0 *   } {name 5 {}}
test 61 {} { v9 get $M @ 1 *   } {type 1 {}}
test 62 {} { v9 get $M @ 2 *   } {subv 7 {}}

test 63 {} { v9 dump $V } { \
  A    B  
  ---  ---
    1    2
   11   22
  111  222}

test 64 {} {
    v9 html $V 0 ;# omit style info
} {<table>
<tr><th class="row"></th><th><i>A</i></th><th><i>B</i></th></tr>
<tr><td align="right" class="row">0</td><td align="right">1</td><td align="right">2</td></tr>
<tr><td align="right" class="row">1</td><td align="right">11</td><td align="right">22</td></tr>
<tr><td align="right" class="row">2</td><td align="right">111</td><td align="right">222</td></tr>
</table>}

test 65 {} { v9 def A:I,B:I 1 2 11 22 111 222 } $V

puts [format "  %.1f us" [lindex [time { v9 names $M } 100] 0]]

cleanup {I J V M}
